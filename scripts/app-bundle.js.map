{"version":3,"sources":["src/app.js","src/authorization-step.js","src/edit-account.js","src/environment.js","src/login.js","src/logout.js","src/main.js","src/management.js","src/not-found.js","src/signup.js","src/tweet.js","src/welcome-screen.js","src/x.js","src/administration/index.js","src/administration/main.js","src/models/message.js","src/models/toolkit.js","src/models/user.js","src/resources/index.js","src/services/broadcast-gateway.js","src/services/user-gateway.js","src/validation/bootstrap-form-validation-renderer.js","src/validation/index.js","src/validation/rules.js","src/administration/components/admin-menu.js","src/administration/components/cleanup-content.js","src/administration/components/cleanup.js","src/administration/components/populate.js","src/administration/components/statistics.js","src/broadcasts/components/vip-editor.js","src/broadcasts/components/vip.js","src/resources/attributes/submit-task.js","src/resources/elements/account-detail.js","src/resources/elements/list-editor.js","src/resources/elements/user-creation.js","src/resources/value-converters/filter-by.js","src/resources/value-converters/group-by.js","src/resources/value-converters/order-by.js","src/administration/components/statistics/summary.js","src/broadcasts/components/broadcast/broadcast.js","src/broadcasts/components/history/history.js"],"names":["App","configureRouter","config","router","title","addPipelineStep","map","route","redirect","name","moduleId","nav","settings","logonRequired","logoutRequired","mapUnknownRoutes","fallbackRoute","AuthorizationStep","user","run","instruction","next","console","log","mail","instructions","getAllInstructions","isRestrictedRoute","toString","isAdmin","alert","cancel","isValidUser","isAuthenticated","EditAccount","eventAggregator","userGateway","nameAlreadyChecked","mailAlreadyChecked","hasAdressChanged","hasNameChanged","hasPasswordChanged","isBusy","validationFailed","addressExists","nameExists","isValidPassword","ea","temporaryUser","nickname","password","activate","self","subscription","subscribe","updatedUser","subscription3","c","uarray","content","forEach","element","uid","id","update","deactivate","dispose","applyChanges","msg1","msg","validateInputFields","hasValidChanges","CheckNameAndMail","length","toLowerCase","hasChanges","debug","testing","usersUrl","Login","Lrouter","e","existingUser","subscription1","isSuccess","getVIPs","subscription2","x","a","active","vips","push","elemnt","vip","nips","navigateToRoute","performLogin","verify","Logout","reset","configure","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","Management","NotFound","Signup","newUser","add","SUrouter","save","performSignup","getByMailAddress","Tweet","WelcomeScreen","X","container","get","addRoute","Administration","Message","fromObject","src","Object","assign","text","image","day","time","userId","Toolkit","createGuid","replace","r","Math","random","v","getDay","now","Date","month","getMonth","slice","getDate","getFullYear","getTime","getHours","getMinutes","getSeconds","isEven","number","resetSelectionRange","selectionRange","User","tool","becomeFollower","isVeryImportantPerson","globalResources","BroadcastGateway","httpClient","broadcasts","withBaseUrl","addVIP","userID","vipName","ToFollow","getByName","res","removeVIP","ToUnFollow","updateVIPStatus","isActiveVIP","PriorityChanger","addMessage","success","Boolean","publish","sucess","error","getMessages","persons","currentUser","messages","removeMessages","useriD","post","UserGateway","users","admins","followers","remove","modifiedUser","username","JSON","parse","cont","transferContentToUser","mailAddress","getAll","fetch","response","json","dto","getById","dbusers","testServerConnection","testLocalHerokuDB","setupDB","BootstrapFormValidationRenderer","render","unrender","elements","formGroup","closest","classList","message","document","createElement","className","textContent","parentNode","insertBefore","nextSibling","querySelector","removeChild","querySelectorAll","registerHandler","customRule","value","obj","undefined","isNaN","maxSize","FileList","Array","from","every","file","size","hasOneOfExtensions","extensions","fileName","some","endsWith","ext","allHaveOneOfExtensions","files","AdminMenu","tryAddUser","tryDeleteUser","confirm","CleanupContent","Cleanup","of","validationController","displayMessages","activateUser","processTask","testSubmitButton3","AddUser","Statistics","ListEditorCustomElement","History","broadcastGateway","isVeryImportant","status","SubmitTaskCustomAttribute","Element","onSubmit","trySubmit","bind","attached","addEventListener","isSubmitTaskExecuting","preventDefault","task","Promise","resolve","completeTask","detached","removeEventListener","AccountDetail","UserCreation","addUser","FilterByValueConverter","toView","array","properties","trim","filter","item","property","includes","GroupByValueConverter","groups","Map","key","group","items","set","values","OrderByValueConverter","direction","directionFactor","sort","item1","item2","value1","value2","retrieveSummary","emptyGrid","Broadcast","isImageAttached","imageUrl","selectedFiles","selectedImage","toolkit","detachImage","updateImageUrl","readFileURL","updatePreview","selectedFile","broadcast","reader","FileReader","onload","target","result","readAsDataURL","sendMessage","isValidMessage","encodeURIComponent","retrieveMessages"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { AuthorizationStep } from 'authorization-step';\n\nexport class App {\n\n  // Logout-Pipeline:  \n  // => a navigation setting (here: logoutRequired) gets the route invoked\n  //    each time a navigation request is issued, so the activate-method gets called\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Postillion';\n    config.addPipelineStep('authorize', AuthorizationStep);\n    config.map([ \n      { route: '', redirect: 'home' },\n      { route: 'home', name: 'home', moduleId: 'welcome-screen', nav: false },\n      { route: 'login', name: 'login', moduleId: 'login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'signup', nav: true, title: 'Signup' },\n      { route: 'account', name: 'account', moduleId: 'edit-account', nav: true, title: 'Edit Account' },\n      { route: 'tweet', name: 'tweet', moduleId: 'tweet', nav: true, title: 'Postoffice', settings: { logonRequired: true } },\n      { route: 'logout', name: 'logout', moduleId: 'logout', nav: true, title: 'Logout', settings: { logoutRequired: true } }\n    ]);\n    config.mapUnknownRoutes('not-found');\n    config.fallbackRoute('home');\n  }\n}\n\n//      { route: 'administration', name: 'administration', moduleId: 'administration/adm', nav: true, title: 'Management', settings: { restrictedToAdmins: true } },","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { Redirect } from 'aurelia-router';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class AuthorizationStep {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    run(instruction, next) {\r\n        //console.log(user.toString());\r\n        console.log(\"Checking route permissions of user \" + this.user.mail);\r\n        var instructions = instruction.getAllInstructions()\r\n\r\n        // Administration         \r\n        var isRestrictedRoute = false;\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.restrictedToAdmins);\r\n\r\n        console.log('Is route restricted for admins ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isAdmin = this.user.isAdmin;\r\n            console.log('Is Admin ? ' + isAdmin);\r\n            if (!isAdmin) {\r\n                alert('Please register as administrator.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Run core application\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.logonRequired);\r\n\r\n        console.log('Does route require login ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isValidUser = this.user.isAuthenticated;\r\n            console.log('Is valid User ? ' + isValidUser);\r\n            if (!isValidUser) {\r\n                alert('Please login first.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Logout : no action required\r\n\r\n        \r\n        // Continue        \r\n        return next();\r\n    }\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n\r\n@inject(EventAggregator, UserGateway, User)\r\nexport class EditAccount {\r\n    nameAlreadyChecked = false;\r\n    mailAlreadyChecked = false;\r\n    hasAdressChanged = false;\r\n    hasNameChanged = false;\r\n    hasPasswordChanged = false;\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    constructor(eventAggregator, userGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        console.log(user.toString());\r\n        this.temporaryUser = new User();\r\n        this.temporaryUser.mail = this.user.mail;\r\n        this.temporaryUser.nickname = this.user.nickname;\r\n        this.temporaryUser.password = this.user.password;\r\n\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Edit-Account activted\");\r\n        var self = this;\r\n        this.subscription = this.ea.subscribe('user-updated', function (updatedUser) {\r\n            self.user.mail = updatedUser.mail;\r\n            self.user.nickname = updatedUser.nickname;\r\n            self.user.password = updatedUser.password;\r\n            console.log(\"Changed user data : \" + self.user.toString());\r\n        });\r\n\r\n       \r\n\r\n        this.subscription3 = this.ea.subscribe('user-mailNameCheck', function (c) {          \r\n            var uarray = c.content;\r\n            uarray.forEach(function (element) {\r\n           if (element.uid != self.user.id)\r\n           {\r\n               if (element.name == self.user.nickname)\r\n               {\r\n                   \r\n                   self.nameExists = true;\r\n               }    \r\n               if (element.mail == self.user.mail)\r\n               {\r\n                   self.addressExists = true;\r\n               }    \r\n           }    \r\n       }, self);\r\n\r\n       if (self.addressExists == false && self.nameExists == false)\r\n       {\r\n           self.userGateway.update(self.user, self.temporaryUser);\r\n       }    \r\n\r\n        });\r\n\r\n    }\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n        this.subscription3.dispose();        \r\n    }\r\n\r\n    applyChanges() {\r\n        var msg1 = \"Original user : \" + this.user.toString();\r\n        console.log(msg1);\r\n        var msg = \"Input :  \" + this.temporaryUser.mail + \" \" + this.temporaryUser.nickname + \" \" + this.temporaryUser.password;\r\n        console.log(msg);\r\n        //alert(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validateInputFields();\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed : Empty fields\");\r\n            return;\r\n        }\r\n\r\n        if (!this.hasValidChanges()) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.nameAlreadyChecked = false\r\n        this.mailAlreadyChecked = false;\r\n        this.userGateway.CheckNameAndMail(this.temporaryUser.mail, this.temporaryUser.nickname);\r\n     //   this.userGateway.update(this.user, this.temporaryUser, this.hasAdressChanged, this.hasNameChanged,this.hasPasswordChanged );\r\n    }\r\n\r\n    validateInputFields() {\r\n        this.validationFailed =\r\n            this.temporaryUser.mail.length == 0 ||\r\n            this.temporaryUser.nickname.length == 0 ||\r\n            this.temporaryUser.password.length == 0;\r\n    }\r\n\r\n    hasValidChanges() {\r\n        this.hasAdressChanged = this.user.mail.toLowerCase() !== this.temporaryUser.mail.toLowerCase();\r\n        this.hasNameChanged = this.user.nickname.toLowerCase() !== this.temporaryUser.nickname.toLowerCase();\r\n        this.hasPasswordChanged = this.user.password !== this.temporaryUser.password;\r\n\r\n        var hasChanges = this.hasAdressChanged || this.hasNameChanged || this.hasPasswordChanged;\r\n        if (!hasChanges) {\r\n            console.log(\"Input-Validation result : No changes\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n}","export default {\n  debug: true,\n  testing: true,\n  usersUrl: 'http://localhost:3000/',\n};\n","import { inject } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router, EventAggregator, UserGateway, User)\r\nexport class Login {\r\n    constructor(router, eventAggregator, userGateway, user) {\r\n        this.Lrouter = router;\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.user.mail = \"a@a.a\";\r\n        this.user.password = \"a\";\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = true;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    activate() {\r\n        console.log(\"Login activted\");\r\n        var self = this;\r\n        this.subscription = this.ea.subscribe('login-check', function (e) {\r\n            console.log(\"Login Event raised\");\r\n            console.log(e);\r\n            if (e != \"[]\") {\r\n                self.user.id = e.existingUser.id;\r\n                self.user.mail = e.existingUser.mail;\r\n                self.user.nickname = e.existingUser.nickname;\r\n                self.user.password = e.existingUser.password;\r\n                self.user.isAuthenticated = \"true\";\r\n\r\n                self.userGateway.isAdmin(self.user.id);\r\n\r\n            }\r\n        });\r\n\r\n        this.subscription1 = this.ea.subscribe('admin-check', function (e) {\r\n            console.log(\"AdminCheck Event raised\");\r\n            console.log(e);\r\n            self.user.isAdmin = e.isSuccess;\r\n            var msg = \"After Login : \" + self.user.toString();\r\n            console.log(msg);\r\n            self.userGateway.getVIPs(self.user.id);\r\n\r\n        });\r\n\r\n\r\n        this.subscription2 = this.ea.subscribe('vips-incoming', function (e) {\r\n            console.log(e.x);\r\n            if (!(e.x == \"[]\" || e.x == \"\")) {\r\n\r\n\r\n                var a = e.x;\r\n                console.log(\"wir haben \" + a);\r\n                a.forEach(function (element) {\r\n                    if (element.active == true) {\r\n                        self.user.vips.push(elemnt.vip);\r\n                    } else {\r\n                        self.user.nips.push(element.vip);\r\n                    }\r\n                }, this);\r\n            }\r\n            self.Lrouter.navigateToRoute('tweet');\r\n        });\r\n\r\n    }\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n    }\r\n    performLogin() {\r\n\r\n\r\n        var msg = \"Before Login : \" + this.user.toString();\r\n        console.log(msg);\r\n        //alert(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed = this.user.mail.length == 0 || this.user.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed : Empty fields\");\r\n            return;\r\n        }\r\n\r\n        this.userGateway.verify(this.user);\r\n\r\n    }\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class Logout {\r\n    constructor(user) {\r\n        this.user = user;\r\n        console.log(\"Logout Route initialised with \" + this.user.mail)\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"activated: Logout \" + this.user.mail )\r\n        if (this.user !== null) {\r\n            console.log(\"Before Reset: \" + this.user.mail);\r\n            this.user.reset()\r\n            console.log(\"After Reset: \"+ this.user.mail);\r\n        }\r\n    }\r\n}\r\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-validation')\n    .feature('validation')\n    .feature('resources')\n  //  .feature('broadcasts')\n    .feature('administration');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Management {}\r\n","export class NotFound {}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router,EventAggregator, UserGateway, User)\r\nexport class Signup {\r\n    constructor(router, eventAggregator, userGateway, user) {\r\n        this.router = router;\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = new User();\r\n        this.newUser.mail = \"a@a.a\";\r\n        this.newUser.nickname = \"aa\";\r\n        this.newUser.password = \"a\";\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Signup activted\");\r\n        var self = this;\r\n        this.subscription = this.ea.subscribe('user-detected', function (e) {\r\n            console.log(\"Event raised\");\r\n            console.log(e);\r\n            \r\n            var existingUser = e.existingUser;\r\n            // display hints if registration fails\r\n            self.addressExists = existingUser.mail != \"\"; \r\n            self.nameExists = existingUser.nickname != \"\";\r\n\r\n            if (!self.addressExists && !self.nameExists) {\r\n                console.log(\"Add user\");\r\n        self.userGateway.add(self.newUser);\r\n            }\r\n        });\r\n\r\n        this.subscription2 = this.ea.subscribe('user-added', e => {\r\n            console.log(\"Event 2 raised\");\r\n            console.log(e);\r\n            //this.user = e.existingUser;          \r\n            self.SUrouter.navigateToRoute('login');\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n        this.subscription2.dispose();\r\n    }\r\n\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    save() {\r\n        console.log(\"W\");\r\n        alert('SAVE');\r\n        //    return this.userGateway.create(this.newUser)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n        return this.newUser;\r\n    }\r\n\r\n\r\n    performSignup() {       \r\n        var msg = \"Signup  \" + this.newUser.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.nickname.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n      \r\n        //  var txt = this.userGateway.testLocalHerokuDB();\r\n        this.userGateway.getByMailAddress(this.newUser.mail);\r\n\r\n    }\r\n}\r\n","export class Tweet {}\r\n","export class WelcomeScreen {}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(UserGateway, User)\r\nexport class X {\r\n    constructor(userGateway, user) {\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = new User();  \r\n        this.newUser.mail = \"\";\r\n        this.newUser.nickname = \"\";\r\n        this.newUser.password = \"\";\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    performSignup() {\r\n        var msg = \"Signup  \" + newUser.user.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.nickname.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mail);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.nickname != null && existingUser.nickname.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            this.userGateway.add(this.newUser);\r\n        }\r\n    }\r\n}\r\n","// feature with child router : \r\nimport { Router } from 'aurelia-router';\r\n\r\nexport function configure(config) {\r\n    const router = config.container.get(Router);\r\n    router.addRoute({\r\n        route: 'administration', name: 'administration', moduleId: 'administration/main', nav: true, title: 'Administration'\r\n    });\r\n}","// child router inside feature : \r\nimport { inlineView } from 'aurelia-framework';\r\n\r\n@inlineView('<template><router-view></router-view></template>')\r\nexport class Administration {\r\n    configureRouter(config) {\r\n        config.map([\r\n            { route: '', name: 'administration', moduleId: './components/admin-menu', title: '' },\r\n            { route: 'populate', name: 'populate', moduleId: './components/populate', title: 'Add User' },\r\n            { route: 'cleanup', name: 'cleanup', moduleId: './components/cleanup', title: \"Cleanup\" },\r\n            { route: 'statistics', name: 'statistics', moduleId: './components/statistics', title: \"Statistics\" },\r\n        ]);\r\n    }\r\n}","import { ValidationRules } from 'aurelia-validation';\r\n\r\nexport class Message {\r\n    static fromObject(src) {\r\n        const msg = Object.assign(new Message(), src);\r\n        return msg;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    text = 'My very first tweet';\r\n    image = null;\r\n    day = '';\r\n    time = '';\r\n    userId = '';\r\n\r\n    reset() {\r\n        text = '';\r\n        image = null;\r\n        day = '';\r\n        time = '';\r\n        userId = '';\r\n    }\r\n}","export class Toolkit{\r\n\r\n    createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    getDay () {\r\n        var now = new Date();\r\n        var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\r\n        var day = (\"0\" + now.getDate()).slice(-2)\r\n        return now.getFullYear() + \"-\" + month + \"-\" + day;\r\n    }\r\n\r\n    getTime () {\r\n        var now = new Date();\r\n        return now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\r\n    }\r\n\r\n    isEven(number) {\r\n        return (number % 2) == 0;\r\n    }\r\n\r\n    resetSelectionRange () {\r\n        selectionRange = [-1, -1];\r\n    }\r\n\r\n}","import { Toolkit } from './toolkit';\r\n\r\nexport class User {\r\n    static fromObject(src) {\r\n        const user = Object.assign(new User(), src);\r\n        return user;\r\n    }\r\n\r\n    mail = ''; //a@b.c';\r\n    nickname = ''; //otto';\r\n    password = ''; //1';\r\n    id = \"0\";\r\n    \r\n    isAuthenticated = false;\r\n    isAdmin = true;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    vips = []; // Very Important Persons (alwasy visible)\r\n    nips = []; // Normal Important Persons (visible on demand)\r\n\r\n    constructor() {\r\n        var tool = new Toolkit();\r\n        this.id = tool.createGuid();\r\n        console.log(\"User created : \" + this.toString());\r\n    }\r\n\r\n    toString() {\r\n        var msg = \"Current user (ID = \" + this.id + \") : \" + this.mail + \" \" + this.nickname + \" \" + this.password;\r\n        return msg;\r\n    }\r\n\r\n    becomeFollower(id, isVeryImportantPerson) {\r\n        if (isVeryImportantPerson) {\r\n            this.vips.push(id);\r\n        } else {\r\n            this.nips.push(id);\r\n        }\r\n    }\r\n\r\nreset() {\r\n    this.mail = '';\r\n    this.nickname = '';\r\n    this.password = '';\r\n    this.id = '0';\r\n\r\n    this.isAuthenticated = false;\r\n    this.isAdmin = false;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    this.vips = []; // Very Important Persons (alwasy visible)\r\n    this.nips = []; // Normal Important Persons (visible on demand)\r\n}\r\n}","export function configure(config) {\n  config.globalResources([\n    // './attributes/blob-src',\n    // './attributes/file-drop-target',\n     './attributes/submit-task',\n\n    // './elements/file-picker',\n    './elements/group-list.html',\n    './elements/list-editor',\n    './elements/account-detail.html',\n    './elements/login-data.html',\n    './elements/submit-button.html',\n\n    './value-converters/filter-by',\n    './value-converters/group-by',\n    './value-converters/order-by',\n  ]);\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { UserGateway } from './user-gateway';\r\nimport { User } from './../models/user';\r\nimport environment from './../environment';\r\n\r\n@inject(HttpClient, UserGateway, User)\r\nexport class BroadcastGateway {\r\n\r\n    broadcasts = [];\r\n\r\n    constructor(httpClient, userGateway, user) {\r\n        this.user = user;\r\n        this.httpClient = httpClient.configure(config => {\r\n            config\r\n                //  .useStandardConfiguration()\r\n                .withBaseUrl(environment.usersUrl);\r\n        });\r\n        this.userGateway = userGateway;\r\n    }\r\n\r\n    addVIP(userID, vipName) {\r\n        var ToFollow = this.userGateway.getByName(vipName);\r\n        // TODO : retrieve user data from storage\r\n        // name must exist !\r\n        //  compare case insensitive  ;  name is NOT stored as lower case string\r\n        var x;\r\n        this.httpClient.get('/FollowerAdd/' + userID + '/' + ToFollow.id).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeVIP(userID, vipName) {\r\n        // TODO : retrieve user data from storage\r\n        // remove vip from  must exist !\r\n        //  compare case insensitive  ;  name is NOT stored as lower case string\r\n        var ToUnFollow = this.userGateway.getByName(vipName);\r\n        var x;\r\n        this.httpClient.get('/FollowerRemove/' + userID + '/' + ToUnFollow.id).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    updateVIPStatus(userID, vipName, isActiveVIP) {\r\n        var PriorityChanger = this.userGateway.getByName(vipName);\r\n        // TODO : retrieve user data from storage\r\n        // update entry in followers table !\r\n        //  compare vip name case insensitive  ;  name is NOT stored as lower case string\r\n        var x;\r\n        this.httpClient.get('/FollowerActivate/' + userID + '/' + PriorityChanger.id + '/' + isActiveVIP).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //____________________________________________________\r\n    // Messages\r\n\r\n    addMessage(text, image) {\r\n\r\n        this.httpClient.push('/TweetAdd/' + this.user.id + '/' + text + '/' + image)\r\n            .then(res => {\r\n                try {\r\n                    var success = Boolean(res.content);\r\n                    console.log(\"content:\" + res.content + \" - success:\" + success);\r\n                    console.log(\"Raise Event message-sent \");\r\n                    if (success) {\r\n                        this.ea.publish('message-sent', { sucess });\r\n                    }\r\n           \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    getMessages(persons) {\r\n        // TODO  \r\n        var currentUser = persons[0]; // ids\r\n        this.httpClient.get('/TweetsGet/' + currentUser)\r\n            .then(res => {\r\n                try {\r\n                    console.log(\"content:\" + res.content);\r\n                    this.ea.publish('messages-downloaded', { messages });\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    removeMessages(useriD) {\r\n        // TODO \r\n        this.httpClient.post('/TweetsRemove/' + userID)\r\n            .then(res => {\r\n                try {\r\n                    var success = Boolean(res.content);\r\n                    console.log(\"content:\" + res.content + \" - success:\" + success);\r\n                    console.log(\"Raise Event message-removed \");\r\n                    if (success) {\r\n                        this.ea.publish('message-removed', { sucess });\r\n                    }\r\n           \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { User } from './../models/user';\r\nimport environment from './../environment';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class UserGateway {\r\n\r\n    users = [];\r\n    admins = [];\r\n    followers = [];\r\n\r\n    constructor(httpClient, eventAggregator) {\r\n\r\n        this.httpClient = httpClient.configure(config => {\r\n            config\r\n                //  .useStandardConfiguration()\r\n                .withBaseUrl(environment.usersUrl);\r\n        });\r\n        this.ea = eventAggregator;\r\n    }\r\n\r\n    add(user) {\r\n        // add user data to storage\r\n        console.log('/Signup/' + user.id + '/' + user.mail.toLowerCase() + '/' + user.nickname + '/' + user.password);\r\n        this.httpClient.post('/Signup/' + user.id + '/' + user.mail.toLowerCase() + '/' + user.nickname + '/' + user.password)\r\n            .then(res => {\r\n                try {\r\n                    var success = Boolean(res.content);\r\n                    console.log(\"content:\" + res.content + \" - success:\" + success);\r\n                    console.log(\"Raise Event 2 \" + user);\r\n                    if (success)\r\n                        this.ea.publish('user-added', { user });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    remove(user) {\r\n        // remove user and related data from storage\r\n        var success = true;\r\n        this.httpClient.post('/AccountRemove/' + user.id + '/' + user.mail.toLowerCase() + '/' + user.nickname + '/' + user.password)\r\n            .then(res => {\r\n                success = Boolean(res.content);\r\n            });\r\n        return success;\r\n    }\r\n\r\n   // update accout data : mail, name, password    \r\n    update(currentUser, modifiedUser){\r\n     \r\n                this.httpClient.post('/AccountEdit/' + currentUser.id + '/' + modifiedUser.mail.toLowerCase() + '/' + modifiedUser.nickname + '/' + modifiedUser.password)\r\n                    .then(() => {\r\n                       this.ea.publish('user-updated', { modifiedUser });\r\n                    });\r\n\r\n           \r\n    }\r\n    \r\n\r\n    CheckNameAndMail(mail, username)\r\n    {\r\n        this.httpClient.get('/MailNameCheck/' + mail + '/' + username)\r\n            .then(res => {\r\n                var content = JSON.parse(res.content);\r\n              this.ea.publish('user-mailNameCheck', { content });\r\n            });\r\n        \r\n    }\r\n\r\n        // TODO validate login data : mail and password    \r\n    verify(user) {\r\n        var existingUser = new User();\r\n            console.log('/Login/' + user.mail.toLowerCase() + '/' + user.password);\r\n            this.httpClient.post('/Login/' + user.mail.toLowerCase() + '/' + user.password)\r\n                .then(res => {\r\n                    try {\r\n                        var cont = res.content;\r\n                        console.log(\"content:\" + cont);\r\n\r\n                        console.log(\"Raise Event verify \" + cont);\r\n                        this.transferContentToUser(cont, existingUser);\r\n                        this.ea.publish('login-check', { existingUser });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        getByMailAddress(mailAddress) {\r\n            var existingUser = new User();\r\n            // TODO : retrieve user data from storage\r\n            //  compare case insensitive  ;  mail address is stored as lower case string\r\n            this.httpClient.get('/UserGetByMail/' + mailAddress.toLowerCase())\r\n                .then(res => {\r\n                    try {\r\n                        this.transferContentToUser(res.content, existingUser);\r\n                        this.ea.publish('user-detected', { existingUser });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                });\r\n            // return existingUser;\r\n        }\r\n\r\n        getByName(username) {\r\n            var existingUser = new User();\r\n\r\n            // TODO : retrieve user data from storage     \r\n            this.httpClient.get('/UserGetByName/' + username).then(res => {\r\n                try {\r\n                    this.transferContentToUser(res.content, existingUser);\r\n                    this.ea.publish('user-detected', { existingUser });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n            return existingUser;\r\n        }\r\n\r\n        // TODO: delete, demo-code only\r\n        getAll() {\r\n            return this.httpClient.fetch('users')\r\n                .then(response => response.json())\r\n                .then(dto => dto.map(User.fromObject));\r\n        }\r\n\r\n        getById(id) {\r\n            var existingUser = User;\r\n\r\n            // TODO : retrieve user data from storage     \r\n            this.httpClient.get('/UserGetByUid/' + id).then(res => {\r\n                try {\r\n                    transferContentToUser(res.content, existingUser);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n            return existingUser;\r\n        }\r\n\r\n\r\n        transferContentToUser(content, existingUser) {\r\n            console.log(\"transferContentToUser : \"+content);\r\n            if (content == \"\" || content === \"[]\") {\r\n                return;\r\n            }\r\n            var dbusers = JSON.parse(content);\r\n            if (dbusers.length == 0) {\r\n                return;\r\n            }\r\n            existingUser.id = dbusers[0].uid;\r\n            existingUser.mail = dbusers[0].mail;\r\n            existingUser.password = dbusers[0].password;\r\n            existingUser.nickname = dbusers[0].name;\r\n        }\r\n\r\n        isAdmin(userID) {\r\n            this.httpClient.get('/AdminCheck/' + userID).then(res => {\r\n                try {\r\n                    this.ea.publish('admin-check', { res });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        getVIPs(userID) {\r\n            this.httpClient.get('/FollowerGetAR/' + userID).then(res => {\r\n                var x = JSON.parse(res.content);\r\n                try {\r\n                    this.ea.publish('vips-incoming', { x }); \r\n                    console.log(res);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        testServerConnection() {\r\n            var x = new Object();\r\n            this.httpClient.get('/test').then(res => {\r\n                x = res.content\r\n                //    res.send(res.content);\r\n                // await x.value = res.content;\r\n                // return await x;\r\n            });\r\n            return x; // expected result = Welcome ....\r\n        }\r\n\r\n        testLocalHerokuDB() {\r\n            var x;\r\n            this.httpClient.get('/db').then(res => {\r\n                x = res.content;\r\n            });\r\n            return x;  // expected result = tbl:2\r\n        }\r\n\r\n        setupDB() {\r\n            this.httpClient.post('/setupdb').then(res => {\r\n                x = res.content;\r\n            });\r\n        }\r\n    }","import {ValidationRenderer, RenderInstruction, ValidationError} from 'aurelia-validation';\n\nexport class BootstrapFormValidationRenderer {\n\n  render(instruction) {\n    for (let { error, elements } of instruction.unrender) {\n      for (let element of elements) {\n        this.remove(element, error);\n      }\n    }\n\n    for (let { error, elements } of instruction.render) {\n      for (let element of elements) {\n        this.add(element, error);\n      }\n    }\n  }\n\n  add(element, error) {\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n    \n    formGroup.classList.add('has-error');\n\n    const message = document.createElement('span');\n    message.className = 'help-block validation-message';\n    message.textContent = error.message;\n    message.id = `bs-validation-message-${error.id}`;\n    element.parentNode.insertBefore(message, element.nextSibling);\n  }\n\n  remove(element, error) {\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    const message = formGroup.querySelector(`#bs-validation-message-${error.id}`);\n    if (message) {\n      element.parentNode.removeChild(message);\n      \n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {    \n        formGroup.classList.remove('has-error');\n      }\n    }\n  }\n}\n","import './rules';\nimport {BootstrapFormValidationRenderer} from './bootstrap-form-validation-renderer';\n\nexport function configure(config) {\n  config.plugin('aurelia-validation');\n  \n  config.container.registerHandler('bootstrap-form', container => container.get(BootstrapFormValidationRenderer));\n}\n","import {ValidationRules} from 'aurelia-validation';\n\nValidationRules.customRule(\n  'date', \n  (value, obj) => value === null || value === undefined || value === '' || !isNaN(Date.parse(value)), \n  '${$displayName} must be a valid date.'\n);\n\nValidationRules.customRule(\n  'notEmpty',\n  (value, obj) => value && value.length && value.length > 0,\n  '${$displayName} must contain at least one item.'\n);\n\nValidationRules.customRule(\n  'maxFileSize',\n  (value, obj, maxSize) => !(value instanceof FileList)\n    || value.length === 0\n    || Array.from(value).every(file => file.size <= maxSize),\n  '${$displayName} must be smaller than ${$config.maxSize} bytes.',\n  maxSize => ({ maxSize })\n);\n\nfunction hasOneOfExtensions(file, extensions) {\n  const fileName = file.name.toLowerCase();\n  return extensions.some(ext => fileName.endsWith(ext));\n}\n\nfunction allHaveOneOfExtensions(files, extensions) {\n  extensions = extensions.map(ext => ext.toLowerCase());\n  return Array.from(files).every(file => hasOneOfExtensions(file, extensions));\n}\n\nValidationRules.customRule(\n  'fileExtension',\n  (value, obj, extensions) => !(value instanceof FileList)\n    || value.length === 0\n    || allHaveOneOfExtensions(value, extensions),\n  '${$displayName} must have one of the following extensions: ${$config.extensions.join(\\', \\')}.',\n  extensions => ({ extensions })\n);\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(EventAggregator, UserGateway, User)\r\nexport class AdminMenu {\r\n    constructor(router, eventAggregator, userGateway, user) {\r\n        this.router = router;\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n    }\r\n\r\n    tryAddUser() {\r\n\r\n    }\r\n\r\n\r\n    tryDeleteUser() {\r\n        if (confirm('Do you want to delete this user and all of his broadcasts?')) {\r\n            // TODO delete selected items\r\n        }\r\n    }\r\n\r\n}","export class CleanupContent {\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Cleanup{\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n        this.temporaryUser = new User();\r\n        this.temporaryUser.nickname = \"X\"; \r\n        this.temporaryUser.mail = 'a@b.c';\r\n        this.temporaryUser.password = '1';\r\n    }\r\n\r\n    validationFailed = false;\r\n    displayMessages = false;  \r\n\r\n    activateUser() {\r\n        console.log(\"Activate user \" + this.temporaryUser.nickname + \" with messages : \" +this.displayMessages );\r\n    }\r\n\r\n    processTask() {\r\n       console.log(\"Process deletion task for user : \" + this.temporaryUser.nickname);\r\n    }\r\n\r\n    testSubmitButton3() {\r\n        console.log(\"Test Submit Buton 3 : \");//+ this.temporaryUser.nickname);\r\n    }\r\n}","export class AddUser {\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Statistics {\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n    }\r\n\r\n    validationFailed = false;\r\n\r\n}","import { bindable } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nexport class ListEditorCustomElement {\r\n\r\n    @bindable items = [];\r\n    @bindable addItem;\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { BroadcastGateway } from './../../services/broadcast-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(EventAggregator, BroadcastGateway, User)\r\nexport class History {\r\n    constructor(eventAggregator, broadcastGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.user = user;\r\n        this.broadcastGateway = broadcastGateway;\r\n    }\r\n\r\n    vipName = \"\";\r\n    isVeryImportant = false; // vipStatus\r\n\r\n    addVIP(name, status) {\r\n        var vip = new User();\r\n        // TODO : Add or overwrite entry in table 'Followers'\r\n        //    return this.broadcastGateway.addVip(this.vipName,this.isVeryImportant)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }\r\n\r\n\r\n\r\n    removeVIP(name, status) {\r\n        var vip = new User();\r\n        //    return this.broadcastGateway.removeVip(this.vipName,this.isVeryImportant)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }\r\n\r\n}","import {inject, DOM} from 'aurelia-framework';\n\n@inject(DOM.Element)\nexport class SubmitTaskCustomAttribute {\n\n  constructor(element) {\n    this.element = element;\n    this.onSubmit = this.trySubmit.bind(this);\n  }\n\n  attached() {\n    this.element.addEventListener('submit', this.onSubmit);\n    this.element.isSubmitTaskExecuting = false;\n  }\n\n  trySubmit(e) {\n    e.preventDefault();\n    if (this.task) {\n      return;\n    }\n\n    this.element.isSubmitTaskExecuting = true;\n    this.task = Promise.resolve(this.value()).then(\n      () => this.completeTask(),\n      () => this.completeTask());\n  }\n\n  completeTask() {\n    this.task = null;\n    this.element.isSubmitTaskExecuting = false;\n  }\n\n  detached() {\n    this.element.removeEventListener('submit', this.onSubmit);\n  }\n}\n","export class AccountDetail {\r\n\r\n    activate(temporaryUser) {\r\n        this.user = temporaryUser;\r\n    }\r\n}","import {bindable} from 'aurelia-framework';\n\nexport class ListEditorCustomElement {\n  \n  @bindable items = [];\n  @bindable addItem;\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway)\r\nexport class UserCreation {\r\n    constructor(userGateway) {\r\n        this.userGateway = userGateway;\r\n        this.newUser = new User();  \r\n   }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    addUser() {\r\n        var msg = \"Add user  \" + newUser.user.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n        this.newUser.nickname.length == 0 ||\r\n        this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mail);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.nickname != null && existingUser.nickname.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            return this.userGateway.add(this.newUser);\r\n        }\r\n    }\r\n}\r\n","export class FilterByValueConverter {\n  toView(array, value, ...properties) {\n    value = (value || '').trim().toLowerCase();\n    \n    if (!value) {\n      return array;\n    }\n    return array.filter(item => \n      properties.some(property => \n        (item[property] || '').toLowerCase().includes(value)));\n  }\n}\n","export class GroupByValueConverter {\n  toView(array, property) {\n    const groups = new Map();\n    for (let item of array) {\n      let key = item[property];\n      let group = groups.get(key);\n      if (!group) {\n        group = { key, items: [] };\n        groups.set(key, group);\n      }\n      group.items.push(item);\n    }\n    return Array.from(groups.values());\n  }\n}\n","export class OrderByValueConverter {\n  toView(array, property, direction = 'asc') {\n    array = array.slice(0);\n    const directionFactor = direction === 'desc' ? -1 : 1;\n    array.sort((item1, item2) => {\n      const value1 = item1[property];\n      const value2 = item2[property];\n      if (value1 > value2) {\n        return directionFactor;\n      } else if (value1 < value2) {\n        return -directionFactor;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../../services/user-gateway';\r\nimport { User } from './../../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Statistics {\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n        this.user = new User();\r\n    }\r\n\r\n    validationFailed = false;\r\n    displayMessages = false;\r\n\r\n    retrieveSummary() {\r\n        console.log(\"Retrieve summary : \")\r\n    }\r\n\r\n    emptyGrid() {\r\n        console.log(\"Empty summary results : \")\r\n    }\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { computedFrom } from 'aurelia-framework';\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\nimport { User } from './../../../models/user';\r\nimport { Message } from './../../../models/message';\r\nimport { Toolkit } from './../../../models/toolkit';\r\n\r\n@inject(EventAggregator, BroadcastGateway, User, NewInstance.of(Message))\r\nexport class Broadcast {\r\n\r\n    isBusy = false;\r\n    isImageAttached = false;\r\n    imageUrl = null;\r\n    selectedFiles = null;\r\n    selectedImage = null;\r\n\r\n    constructor(eventAggregator,broadcastGateway, user, message) {\r\n        this.ea = eventAggregator;\r\n        this.broadcastGateway = broadcastGateway;\r\n        this.user = user;\r\n        this.message = message;\r\n        this.toolkit = new Toolkit();\r\n    }\r\n\r\n    activate() {\r\n        var self = this;\r\n\r\n        this.subscription = this.ea.subscribe('message-stored', function (e) {\r\n            console.log(\"Event handler for message-stored\");\r\n            self.isBusy = false;\r\n            //this.message.reset();\r\n            //  this.router.navigateToRoute('login'));\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n    }\r\n    \r\n\r\n    @computedFrom('isImageAttached')\r\n    get computedImageUrl() {\r\n        console.log(\"Return image URL :\" + this.imageUrl);\r\n        return this.imageUrl;\r\n    }\r\n\r\n    detachImage() {\r\n        this.imageUrl = null;\r\n        this.isImageAttached = false;\r\n    }\r\n\r\n    updateImageUrl() {\r\n        console.log(\"Update Image URL\");\r\n        if (this.selectedFiles.length > 0) {\r\n            this.isImageAttached = false;\r\n            this.selectedImage = this.selectedFiles[0];\r\n            this.readFileURL(this.selectedImage, this);\r\n            this.isImageAttached = this.imageUrl != null;\r\n        } else {\r\n            detachImage();\r\n        }\r\n    }\r\n\r\n    updatePreview() {\r\n        console.log(\"Update Preview\");\r\n        this.updateImageUrl();\r\n        console.log(\"Updated Image URL :\" + this.imageUrl);\r\n    }\r\n\r\n    readFileURL(selectedFile, broadcast) {\r\n        // load data asynchronously\r\n        var reader = new FileReader();\r\n        reader.onload = (function (selectedImage) {\r\n            return function (e) {\r\n                console.log(\"Selected image :\" + e.target.result);\r\n                broadcast.imageUrl = e.target.result;\r\n            };\r\n        })(selectedFile);\r\n        reader.readAsDataURL(selectedFile);\r\n\r\n    }\r\n\r\n    sendMessage() {\r\n        if (this.isBusy) {\r\n            return;\r\n        };\r\n\r\n        this.isBusy = true;\r\n        console.log(\"Send message\");\r\n        if (this.isValidMessage()) {\r\n            this.message.image = this.imageUrl;\r\n            this.message.userId = this.user.id;\r\n            this.message.day = this.toolkit.getDay();\r\n            this.message.time = this.toolkit.getTime();\r\n            // send message --> add message to table 'tweets'\r\n            this.broadcastGateway.addMessage(this.message.text, encodeURIComponent(this.imageUrl));\r\n        }\r\n    }\r\n\r\n    isValidMessage() {\r\n        if (this.isImageAttached) {\r\n            return true;\r\n        } else {\r\n            return this.message.text.length > 0;\r\n        }\r\n    }\r\n\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\nimport { User } from './../../../models/user';\r\n\r\n@inject(EventAggregator, BroadcastGateway, User)\r\nexport class History {\r\n\r\n    isBusy = false;\r\n    vipName = \"\";\r\n    isVeryImportant = false; // vipStatus\r\n\r\n    constructor(eventAggregator, broadcastGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.user = user;\r\n        this.broadcastGateway = broadcastGateway;\r\n    }\r\n\r\n\r\n    activate() {\r\n        var self = this;\r\n\r\n        this.subscription1 = this.ea.subscribe('messages-downloaded', function (e) {\r\n            console.log(\"Event handler for messages-downloaded\");\r\n            self.isBusy = false;\r\n        });\r\n\r\n        this.subscription2 = this.ea.subscribe('messages-removed', function (e) {\r\n            console.log(\"Event handler for messages-deletion\");\r\n            self.isBusy = false;\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n    }\r\n\r\n    retrieveMessages() {\r\n        if (this.isBusy) {\r\n            return;\r\n        };\r\n        // TODO Create message filter from input \r\n        // Current version : My tweets only, no vips\r\n        var persons = new array();\r\n        persons.push(this.user.id);\r\n\r\n        this.isBusy = true;\r\n        console.log(\"Request messages\");\r\n        this.broadcastGateway.retrieveMessages(persons);\r\n    }\r\n\r\n\r\n\r\n    removeMessages() {\r\n        if (this.isBusy) {\r\n            return;\r\n        };\r\n\r\n        this.isBusy = true;\r\n        console.log(\"Request message-deletion\");\r\n        this.broadcastGateway.removeMessages(this.user.id);\r\n    }\r\n\r\n}"],"sourceRoot":".."}