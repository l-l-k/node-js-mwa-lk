{"version":3,"sources":["src/app.js","src/authorization-step.js","src/edit-account.js","src/environment.js","src/login.js","src/logout.js","src/main.js","src/management.js","src/not-found.js","src/signup.js","src/tweet.js","src/welcome-screen.js","src/resources/index.js"],"names":["App","configureRouter","config","router","title","addPipelineStep","map","route","redirect","name","moduleId","nav","settings","logonRequired","restrictedToAdmins","mapUnknownRoutes","fallbackRoute","AuthorizationStep","run","instruction","next","isRestrictedRoute","getAllInstructions","some","i","console","log","isAdmin","alert","cancel","isValidUser","EditAccount","debug","testing","Login","Logout","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Management","NotFound","Signup","Tweet","WelcomeScreen"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { AuthorizationStep } from 'authorization-step';\n\nexport class App {\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Postillion';\n    config.addPipelineStep('authorize', AuthorizationStep);\n    config.map([\n      { route: '', redirect: 'home' },\n      { route: 'home', name: 'home', moduleId: 'welcome-screen', nav: false },\n      { route: 'login', name: 'login', moduleId: 'login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'signup', nav: true, title: 'Signup' },\n      { route: 'account', name: 'account', moduleId: 'edit-account', nav: true, title: 'Edit Account' },\n      { route: 'tweet', name: 'tweet', moduleId: 'tweet', nav: true, title: 'Postoffice', settings: { logonRequired: true } },\n      { route: 'management', name: 'management', moduleId: 'management', nav: true, title: 'Management', settings: { restrictedToAdmins: true } },\n      { route: 'logout', name: 'logout', moduleId: 'logout', nav: true, title: 'Logout' }\n    ]);\n    config.mapUnknownRoutes('not-found');\n    config.fallbackRoute('home');\n  }\n}\n","import { inject } from 'aurelia-framework';\r\nimport { Redirect } from 'aurelia-router';\r\n// import { User } from 'user';\r\n\r\n//@inject(User)\r\nexport class AuthorizationStep {\r\n    // constructor(user) {\r\n    //     this.user = user;\r\n    // }\r\n\r\n    run(instruction, next) {\r\n        var isRestrictedRoute = instruction.getAllInstructions()\r\n            .some(i => i.config.settings.restrictedToAdmins);\r\n\r\n        console.log('Is route restricted ? ' + isRestrictedRoute);       \r\n        if (isRestrictedRoute) {\r\n            var isAdmin = false; //this.user.isAuthenticated\r\n            console.log('Is Admin ? ' + isAdmin);       \r\n            if (!isAdmin) {\r\n                alert('Please register as administrator.');\r\n               console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n             }\r\n        }\r\n\r\n\r\n        isRestrictedRoute = instruction.getAllInstructions()\r\n            .some(i => i.config.settings.logonRequired);\r\n\r\n        console.log('Is route restricted ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            var isValidUser = false; //this.user.isAuthenticated\r\n            console.log('Is valid User ? ' + isValidUser);\r\n            if (!isValidUser) {\r\n                alert('Please login first.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n        \r\n        return next();\r\n    }\r\n}","export class EditAccount { \r\n    \r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Login { \r\n    \r\n}\r\n","export class Logout { \r\n    // TODO : Cleanup user object\r\n}\r\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n  \n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Management {}\r\n","export class NotFound {}\n","export class Signup {}\r\n","export class Tweet {}\r\n","export class WelcomeScreen {}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}