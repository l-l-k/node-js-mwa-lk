{"version":3,"sources":["src/app.js","src/authorization-step.js","src/edit-account.js","src/environment.js","src/login.js","src/logout.js","src/main.js","src/management.js","src/not-found.js","src/signup.js","src/tweet.js","src/welcome-screen.js","src/x.js","src/administration/index.js","src/administration/main.js","src/models/message.js","src/models/toolkit.js","src/models/user.js","src/resources/index.js","src/services/broadcast-gateway.js","src/services/user-gateway.js","src/validation/bootstrap-form-validation-renderer.js","src/validation/index.js","src/validation/rules.js","src/administration/components/admin-menu.js","src/administration/components/cleanup-content.js","src/administration/components/cleanup.js","src/administration/components/populate.js","src/administration/components/statistics.js","src/broadcasts/components/vip-editor.js","src/broadcasts/components/vip.js","src/resources/attributes/submit-task.js","src/resources/elements/account-detail.js","src/resources/elements/list-editor.js","src/resources/elements/user-creation.js","src/resources/value-converters/filter-by.js","src/resources/value-converters/group-by.js","src/resources/value-converters/order-by.js","src/administration/components/statistics/summary.js","src/broadcasts/components/broadcast/broadcast-image.js","src/broadcasts/components/broadcast/broadcast.js","src/broadcasts/components/broadcast/contact-photo.js","src/broadcasts/components/broadcast/tweet.js","src/broadcasts/components/history/history.js"],"names":["App","configureRouter","config","router","title","addPipelineStep","map","route","redirect","name","moduleId","nav","settings","logonRequired","logoutRequired","mapUnknownRoutes","fallbackRoute","AuthorizationStep","user","run","instruction","next","console","log","mail","instructions","getAllInstructions","isRestrictedRoute","toString","isAdmin","alert","cancel","isValidUser","isAuthenticated","EditAccount","userGateway","isBusy","validationFailed","addressExists","nameExists","isValidPassword","temporaryUser","of","password","applyChanges","msg1","msg","validateInputFields","hasValidChanges","update","length","hasAdressChanged","toLwerCase","hasNameChanged","hasPasswordChanged","hasChanges","anyUser","getByMailAddress","mailAddress","id","getByName","debug","testing","usersUrl","Login","performLogin","Logout","activate","reset","configure","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","Management","NotFound","Signup","newUser","save","performSignup","existingUser","add","navigateToRoute","Tweet","WelcomeScreen","X","container","get","addRoute","Administration","Message","fromObject","src","Object","assign","text","image","day","time","userId","Toolkit","createGuid","replace","c","r","Math","random","v","getDay","now","Date","month","getMonth","slice","getDate","getFullYear","getTime","getHours","getMinutes","getSeconds","isEven","number","resetSelectionRange","selectionRange","User","vips","nips","tool","becomeFollower","isVeryImportantPerson","push","globalResources","BroadcastGateway","httpClient","withBaseUrl","addVIP","myID","vipName","ToFollow","x","res","content","removeVIP","ToUnFollow","updateVIPStatus","isVeryImportant","PriorityChanger","UserGateway","useStandardConfiguration","currentUser","modifiedUser","success","modifi","verify","fetch","response","json","getAll","dto","getById","BootstrapFormValidationRenderer","render","unrender","error","elements","element","remove","formGroup","closest","classList","message","document","createElement","className","textContent","parentNode","insertBefore","nextSibling","querySelector","removeChild","querySelectorAll","registerHandler","customRule","value","obj","undefined","isNaN","parse","maxSize","FileList","Array","from","every","file","size","hasOneOfExtensions","extensions","fileName","toLowerCase","some","endsWith","ext","allHaveOneOfExtensions","files","AdminMenu","tryAddUser","tryDeleteUser","confirm","CleanupContent","Cleanup","validationController","displayMessages","activateUser","processTask","testSubmitButton3","AddUser","Statistics","ListEditorCustomElement","History","broadcastGateway","status","vip","SubmitTaskCustomAttribute","Element","onSubmit","trySubmit","bind","attached","addEventListener","isSubmitTaskExecuting","e","preventDefault","task","Promise","resolve","completeTask","detached","removeEventListener","AccountDetail","UserCreation","addUser","FilterByValueConverter","toView","array","properties","trim","filter","item","property","includes","GroupByValueConverter","groups","Map","key","group","items","set","values","OrderByValueConverter","direction","directionFactor","sort","item1","item2","value1","value2","retrieveSummary","emptyGrid","BroadcastImage","inject","NewInstance","validateTrigger","change","Broadcast","isSending","isImageAttached","imageUrl","selectedFiles","selectedImage","toolkit","detachImage","updateImageUrl","readFileURL","updatePreview","selectedFile","broadcast","reader","FileReader","onload","target","result","readAsDataURL","sendMessage","isValidMessage","ContactPhoto","photo","tweetCreation","tweetsTable","getElementById","tweetTbl","tweetTable","tableUpdateRequested","addImage","img","preview","tweetRecord","userID","picture","attachment","tweetCreationObject","createTweet","selectFile","openFileDialog","click","evaluateFileDialog","innerHTML","publishTweet","forms","defineTweet","currentSrc","substring","newTweet","activeUser","mwaToolset","storageWriter","uploadTweet","tweets","availableTweets","updateTable","findTweets","tweetCreator","uploadCommand","fileSelectorProxy","fileSelector","wasteBasket","retrieveMessages","persons","removeMessages","messages"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { AuthorizationStep } from 'authorization-step';\n\nexport class App {\n\n  // Logout-Pipeline:  \n  // => a navigation setting (here: logoutRequired) gets the route invoked\n  //    each time a navigation request is issued, so the activate-method gets called\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Postillion';\n    config.addPipelineStep('authorize', AuthorizationStep);\n    config.map([ \n      { route: '', redirect: 'home' },\n      { route: 'home', name: 'home', moduleId: 'welcome-screen', nav: false },\n      { route: 'login', name: 'login', moduleId: 'login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'signup', nav: true, title: 'Signup' },\n      { route: 'account', name: 'account', moduleId: 'edit-account', nav: true, title: 'Edit Account' },\n      { route: 'tweet', name: 'tweet', moduleId: 'tweet', nav: true, title: 'Postoffice', settings: { logonRequired: true } },\n      { route: 'logout', name: 'logout', moduleId: 'logout', nav: true, title: 'Logout', settings: { logoutRequired: true } }\n    ]);\n    config.mapUnknownRoutes('not-found');\n    config.fallbackRoute('home');\n  }\n}\n\n//      { route: 'administration', name: 'administration', moduleId: 'administration/adm', nav: true, title: 'Management', settings: { restrictedToAdmins: true } },","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { Redirect } from 'aurelia-router';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class AuthorizationStep {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    run(instruction, next) {\r\n        //console.log(user.toString());\r\n        console.log(\"Checking route permissions of user \" + this.user.mail);\r\n        var instructions = instruction.getAllInstructions()\r\n\r\n        // Administration         \r\n        var isRestrictedRoute = false;\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.restrictedToAdmins);\r\n\r\n        console.log('Is route restricted for admins ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isAdmin = this.user.isAdmin;\r\n            console.log('Is Admin ? ' + isAdmin);\r\n            if (!isAdmin) {\r\n                alert('Please register as administrator.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Run core application\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.logonRequired);\r\n\r\n        console.log('Does route require login ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isValidUser = this.user.isAuthenticated;\r\n            console.log('Is valid User ? ' + isValidUser);\r\n            if (!isValidUser) {\r\n                alert('Please login first.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Logout : no action required\r\n\r\n        \r\n        // Continue        \r\n        return next();\r\n    }\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(UserGateway, User)\r\nexport class EditAccount {\r\n    constructor(userGateway, user) {\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.temporaryUser = NewInstance.of(User);\r\n        this.temporaryUser.mail = this.user.mail;\r\n        this.temporaryUser.name = this.user.name;\r\n        this.temporaryUser.password = this.user.password;\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    applyChanges() {\r\n        var msg1 = \"Original user : \" + this.user.toString();\r\n        console.log(msg1);\r\n        var msg = \"Input :  \" + this.temporaryUser.mail + \" \" + this.temporaryUser.name + \" \" + this.temporaryUser.password;\r\n        console.log(msg);\r\n        //alert(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validateInputFields();\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed : Empty fields\");\r\n            return;\r\n        }\r\n\r\n        if (!this.hasValidChanges()) {\r\n            return;\r\n        }\r\n\r\n        // change user record in data base\r\n        if (this.userGateway.update(this.user, this.temporaryUser)) {\r\n            //  update active user\r\n            this.user.mail = this.temporaryUser.mail;\r\n            this.user.name = this.temporaryUser.name;\r\n            this.user.password = this.temporaryUser.password;\r\n\r\n            console.log(\"Changed user data : \" + this.user.toString());\r\n        }\r\n    }\r\n\r\n    validateInputFields() {\r\n        this.validationFailed =\r\n            this.temporaryUser.mail.length == 0 ||\r\n            this.temporaryUser.name.length == 0 ||\r\n            this.temporaryUser.password.length == 0;\r\n    }\r\n\r\n    hasValidChanges() {\r\n        var hasAdressChanged = this.user.mail.toLwerCase() !== this.temporaryUser.mail.toLwerCase();\r\n        var hasNameChanged = this.user.name.toLwerCase() !== this.temporaryUser.name.toLwerCase();\r\n        var hasPasswordChanged = this.user.password !== this.temporaryUser.password;\r\n\r\n        var hasChanges = hasAdressChanged || hasNameChanged || hasPasswordChanged;\r\n        if (!hasChanges) {\r\n            console.log(\"Input-Validation result : No changes\");\r\n            return false;\r\n        }\r\n\r\n        // TODO: allow changes        \r\n        var anyUser = User;\r\n        if (hasAdressChanged) {\r\n            anyUser = this.userGateway.getByMailAddress(this.temporaryUser.mailAddress);\r\n            this.addressExists = this.user.id !== anyUser.id;\r\n        }\r\n\r\n        if (hasNameChanged) {\r\n            anyUser = this.userGateway.getByName(this.temporaryUser.name);\r\n            this.nameExists = this.user.id !== anyUser.id;\r\n        }\r\n\r\n        if (addressExists || nameExists || !hasPasswordChanged) {\r\n            console.log(\"Input-Validation result : Invalid changes\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n}","export default {\n  debug: true,\n  testing: true,\n  usersUrl: 'http://localhost:3000/',\n};\n","import { inject } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(UserGateway, User)\r\nexport class Login {\r\n    constructor(userGateway, user) {\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = true;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    performLogin() {\r\n        var msg = \"Before Login : \" + this.user.toString();\r\n        console.log(msg);\r\n        //alert(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed = this.user.mail.length == 0 || this.user.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed : Empty fields\");\r\n            return;\r\n        }\r\n\r\n        // Enable all\r\n        // TODO: set properties isAuthenticated, isAdmin\r\n        this.user.isAuthenticated = true;\r\n        this.user.isAdmin = true;\r\n        //this.user = this.userGateway.verify(this.user);\r\n        // this.userGateway.verify(this.user);\r\n\r\n        msg = \"After Login : \" + this.user.toString();\r\n        console.log(msg);\r\n\r\n        // TODO Logout any active user : cleanup broadcast-feature\r\n        //this.user.reset();\r\n\r\n    }\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class Logout {\r\n    constructor(user) {\r\n        this.user = user;\r\n        console.log(\"Logout Route initialised with \" + this.user.mail)\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"activated: Logout \" + this.user.mail )\r\n        if (this.user !== null) {\r\n            console.log(\"Before Reset: \" + this.user.mail);\r\n            this.user.reset()\r\n            console.log(\"After Reset: \"+ this.user.mail);\r\n        }\r\n    }\r\n}\r\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-validation')\n    .feature('validation')\n    .feature('resources')\n  //  .feature('broadcasts')\n    .feature('administration');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Management {}\r\n","export class NotFound {}\n","import { inject , NewInstance} from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(UserGateway, User)\r\nexport class Signup {\r\n    constructor(userGateway, user) {\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = NewInstance.of(User);\r\n        this.newUser.mail = \"\";\r\n        this.newUser.name = \"\";\r\n        this.newUser.password = \"\";\r\n }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    save() {\r\n        console.log(\"W\");\r\n       alert('SAVE');\r\n    //    return this.userGateway.create(this.newUser)\r\n    //        .then(() => this.router.navigateToRoute('login'));\r\n       return this.newUser;    \r\n    }\r\n    \r\n\r\n    performSignup() {\r\n       var msg = \"Signup  \" + this.newUser.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n        this.newUser.name.length == 0 ||\r\n        this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mailAddress);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.name != null && existingUser.name.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            this.userGateway.add(this.newUser);\r\n        }\r\n\r\n        this.router.navigateToRoute('login');\r\n    }\r\n}\r\n","export class Tweet {}\r\n","export class WelcomeScreen {}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(UserGateway, User)\r\nexport class X {\r\n    constructor(userGateway, user) {\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = NewInstance.of(User);\r\n        this.newUser.mail = \"\";\r\n        this.newUser.name = \"\";\r\n        this.newUser.password = \"\";\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    performSignup() {\r\n        var msg = \"Signup  \" + newUser.user.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.name.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mailAddress);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.name != null && existingUser.name.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            this.userGateway.add(this.newUser);\r\n        }\r\n    }\r\n}\r\n","// feature with child router : \r\nimport { Router } from 'aurelia-router';\r\n\r\nexport function configure(config) {\r\n    const router = config.container.get(Router);\r\n    router.addRoute({\r\n        route: 'administration', name: 'administration', moduleId: 'administration/main', nav: true, title: 'Administration'\r\n    });\r\n}","// child router inside feature : \r\nimport { inlineView } from 'aurelia-framework';\r\n\r\n@inlineView('<template><router-view></router-view></template>')\r\nexport class Administration {\r\n    configureRouter(config) {\r\n        config.map([\r\n            { route: '', name: 'administration', moduleId: './components/admin-menu', title: '' },\r\n            { route: 'populate', name: 'populate', moduleId: './components/populate', title: 'Add User' },\r\n            { route: 'cleanup', name: 'cleanup', moduleId: './components/cleanup', title: \"Cleanup\" },\r\n            { route: 'statistics', name: 'statistics', moduleId: './components/statistics', title: \"Statistics\" },\r\n        ]);\r\n    }\r\n}","import { ValidationRules } from 'aurelia-validation';\r\n\r\nexport class Message {\r\n    static fromObject(src) {\r\n        const msg = Object.assign(new Message(), src);\r\n        return msg;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    text = 'My very first tweet';\r\n    image = null;\r\n    day = '';\r\n    time = '';\r\n    userId = '';\r\n\r\n    reset() {\r\n        text = '';\r\n        image = null;\r\n        day = '';\r\n        time = '';\r\n        userId = '';\r\n    }\r\n}","export class Toolkit{\r\n\r\n    createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    getDay () {\r\n        var now = new Date();\r\n        var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\r\n        var day = (\"0\" + now.getDate()).slice(-2)\r\n        return now.getFullYear() + \"-\" + month + \"-\" + day;\r\n    }\r\n\r\n    getTime () {\r\n        var now = new Date();\r\n        return now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\r\n    }\r\n\r\n    isEven(number) {\r\n        return (number % 2) == 0;\r\n    }\r\n\r\n    resetSelectionRange () {\r\n        selectionRange = [-1, -1];\r\n    }\r\n\r\n}","import { Toolkit } from './toolkit';\r\n\r\nexport class User {\r\n    static fromObject(src) {\r\n        const user = Object.assign(new User(), src);\r\n        return user;\r\n    }\r\n\r\n    mail = 'a@b.c';\r\n    name = 'otto';\r\n    password = '1';\r\n    id = \"0\";\r\n\r\n    isAuthenticated = false;\r\n    isAdmin = true;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    vips = []; // Very Important Persons (alwasy visible)\r\n    nips = []; // Normal Important Persons (visible on demand)\r\n\r\n    constructor() {\r\n        var tool = new Toolkit();\r\n        this.id = tool.createGuid();\r\n        console.log(\"User created : \" + this.toString());\r\n    }\r\n\r\n    toString() {\r\n        var msg = \"Current user (ID = \" + this.id + \") : \" + this.mail + \" \" + this.name + \" \" + this.password;\r\n        return msg;\r\n    }\r\n\r\n    becomeFollower(id, isVeryImportantPerson) {\r\n        if (isVeryImportantPerson) {\r\n            this.vips.push(id);\r\n        } else {\r\n            this.nips.push(id);\r\n        }\r\n    }\r\n\r\nreset() {\r\n    this.mail = '';\r\n    this.name = '';\r\n    this.password = '';\r\n    this.id = '0';\r\n\r\n    this.isAuthenticated = false;\r\n    this.isAdmin = false;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    this.vips = []; // Very Important Persons (alwasy visible)\r\n    this.nips = []; // Normal Important Persons (visible on demand)\r\n}\r\n}","export function configure(config) {\n  config.globalResources([\n    // './attributes/blob-src',\n    // './attributes/file-drop-target',\n     './attributes/submit-task',\n\n    // './elements/file-picker',\n    './elements/group-list.html',\n    './elements/list-editor',\n    './elements/account-detail.html',\n    './elements/login-data.html',\n    './elements/submit-button.html',\n\n    './value-converters/filter-by',\n    './value-converters/group-by',\n    './value-converters/order-by',\n  ]);\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { UserGateway } from './user-gateway';\r\nimport { User } from './../models/user';\r\nimport environment from './../environment';\r\n\r\n@inject(HttpClient, UserGateway)\r\nexport class BroadcastGateway {\r\n    constructor(httpClient, userGateway) {\r\n        this.httpClient = httpClient.configure(config => {\r\n            config\r\n                //  .useStandardConfiguration()\r\n                .withBaseUrl(environment.usersUrl);\r\n        });\r\n        this.userGateway = userGateway;\r\n    }\r\n\r\n    addVIP(myID, vipName) {// ACHTUNG- FUNKTION HAT EINEN NEUEN PARAMETER\r\n       \r\n// ?? WIE SPRICHT MAN HIER DAS USERGATEWAY AN\r\n        var ToFollow = this.userGateway.getByName(vipName);        \r\n        // TODO : retrieve user data from storage\r\n        // name must exist !\r\n        //  compare case insensitive  ;  name is NOT stored as lower case string\r\n        var x;\r\n        this.httpClient.get('/FollowerAdd/' + myID + '/' + ToFollow.id).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n    \r\n    removeVIP(myID, vipName) { // ACHTUNG- FUNKTION HAT EINEN NEUEN PARAMETER\r\n        // TODO : retrieve user data from storage\r\n        // remove vip from  must exist !\r\n        //  compare case insensitive  ;  name is NOT stored as lower case string\r\n        var ToUnFollow = this.userGateway.getByName(vipName); \r\n        var x;\r\n        this.httpClient.get('/FollowerRemove/'+myID+'/'+ToUnFollow.id).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n       \r\n    updateVIPStatus(myID,vipName, isVeryImportant) { // ACHTUNG- FUNKTION HAT EINEN NEUEN PARAMETER\r\n        var PriorityChanger = this.userGateway.getByName(vipName);\r\n        // TODO : retrieve user data from storage\r\n        // update entry in followers table !\r\n        //  compare vip name case insensitive  ;  name is NOT stored as lower case string\r\n        var x;\r\n        this.httpClient.get('/FollowerActivate/'+myID+'/'+PriorityChanger.id+'/'+isVeryImportant).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport { User } from './../models/user';\r\nimport environment from './../environment';\r\n\r\n@inject(HttpClient)\r\nexport class UserGateway {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient.configure(config => {\r\n            config\r\n                .useStandardConfiguration()\r\n                .withBaseUrl(environment.usersUrl);\r\n        });\r\n    }\r\n\r\n    add(user) {\r\n        // TODO : complete user data with id\r\n        // TODO : add user data to storage\r\n                // TODO : store mail address as lower case string    \r\n\r\n    }\r\n\r\n    // TODO update accout data : mail, name, password    \r\n    update(currentUser, modifiedUser) {\r\n        var success = true;\r\n// validate changes\r\n        // TODO : compare case insensitive    \r\n        if (currentUser.mail.toLwerCase() !== modifiedUser.mail.toLwerCase() ) {\r\n            var existingUser = getByMailAddress(modifi)\r\n\r\n        }\r\n        var hasChanges =\r\n            this.user.mail.toLwerCase() !== this.temporaryUser.mail.toLwerCase() ||\r\n            this.user.name.toLwerCase() !== this.temporaryUser.name.toLwerCase() ||\r\n            this.user.password !== this.temporaryUser.password;\r\n        \r\n        var existingUser = getByMailAddress(modifi)\r\n        return success;\r\n    }\r\n    \r\n     // TODO validate login data : mail and password    \r\n   verify(user) {\r\n        console.log(\"Called : getLoginDummy\");\r\n        var existingUser = NewInstance.of(User);\r\n        existingUser.mail = 'm@w.a';\r\n        console.log(\"Created : \" + existingUser.mail);\r\n        existingUser.name = 'dummy';\r\n        existingUser.password = '1';\r\n        existingUser.id = '1';\r\n\r\n        existingUser.isAuthenticated = true;\r\n        existingUser.isAdmin = false;\r\n        var msg = \"Return : \" + existingUser.isAuthenticated;\r\n        console.log(msg);\r\n\r\n        return existingUser.isAuthenticated;\r\n    }\r\n\r\n   getByMailAddress(mailAddress) {\r\n       var existingUser = NewInstance.of(User);\r\n\r\n       // TODO : retrieve user data from storage\r\n        //  compare case insensitive  ;  mail address is stored as lower case string\r\n       var x =  this.httpClient.fetch(`test`)\r\n           .then(response => response.json())\r\n           .then(User.fromObject);\r\n       return x;\r\n   }\r\n\r\n   getByName(name) {\r\n       var existingUser = NewInstance.of(User);\r\n\r\n       // TODO : retrieve user data from storage\r\n       //  compare case insensitive  ;  mail address is stored as lower case string\r\n\r\n       return existingUser;\r\n   }\r\n    \r\n\r\n    getAll() {\r\n        return this.httpClient.fetch('users')\r\n            .then(response => response.json())\r\n            .then(dto => dto.map(User.fromObject));\r\n    }\r\n\r\n    getById(id) {\r\n        return this.httpClient.fetch(`users/${id}`)\r\n            .then(response => response.json())\r\n            .then(User.fromObject);\r\n    }\r\n\r\n\r\n}","import {ValidationRenderer, RenderInstruction, ValidationError} from 'aurelia-validation';\n\nexport class BootstrapFormValidationRenderer {\n\n  render(instruction) {\n    for (let { error, elements } of instruction.unrender) {\n      for (let element of elements) {\n        this.remove(element, error);\n      }\n    }\n\n    for (let { error, elements } of instruction.render) {\n      for (let element of elements) {\n        this.add(element, error);\n      }\n    }\n  }\n\n  add(element, error) {\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n    \n    formGroup.classList.add('has-error');\n\n    const message = document.createElement('span');\n    message.className = 'help-block validation-message';\n    message.textContent = error.message;\n    message.id = `bs-validation-message-${error.id}`;\n    element.parentNode.insertBefore(message, element.nextSibling);\n  }\n\n  remove(element, error) {\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    const message = formGroup.querySelector(`#bs-validation-message-${error.id}`);\n    if (message) {\n      element.parentNode.removeChild(message);\n      \n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {    \n        formGroup.classList.remove('has-error');\n      }\n    }\n  }\n}\n","import './rules';\nimport {BootstrapFormValidationRenderer} from './bootstrap-form-validation-renderer';\n\nexport function configure(config) {\n  config.plugin('aurelia-validation');\n  \n  config.container.registerHandler('bootstrap-form', container => container.get(BootstrapFormValidationRenderer));\n}\n","import {ValidationRules} from 'aurelia-validation';\n\nValidationRules.customRule(\n  'date', \n  (value, obj) => value === null || value === undefined || value === '' || !isNaN(Date.parse(value)), \n  '${$displayName} must be a valid date.'\n);\n\nValidationRules.customRule(\n  'notEmpty',\n  (value, obj) => value && value.length && value.length > 0,\n  '${$displayName} must contain at least one item.'\n);\n\nValidationRules.customRule(\n  'maxFileSize',\n  (value, obj, maxSize) => !(value instanceof FileList)\n    || value.length === 0\n    || Array.from(value).every(file => file.size <= maxSize),\n  '${$displayName} must be smaller than ${$config.maxSize} bytes.',\n  maxSize => ({ maxSize })\n);\n\nfunction hasOneOfExtensions(file, extensions) {\n  const fileName = file.name.toLowerCase();\n  return extensions.some(ext => fileName.endsWith(ext));\n}\n\nfunction allHaveOneOfExtensions(files, extensions) {\n  extensions = extensions.map(ext => ext.toLowerCase());\n  return Array.from(files).every(file => hasOneOfExtensions(file, extensions));\n}\n\nValidationRules.customRule(\n  'fileExtension',\n  (value, obj, extensions) => !(value instanceof FileList)\n    || value.length === 0\n    || allHaveOneOfExtensions(value, extensions),\n  '${$displayName} must have one of the following extensions: ${$config.extensions.join(\\', \\')}.',\n  extensions => ({ extensions })\n);\n","export class AdminMenu {\r\n\r\n    tryAddUser() {\r\n    \r\n    }\r\n\r\n\r\n    tryDeleteUser() {\r\n        if (confirm('Do you want to delete this user and all of his broadcasts?')) {\r\n            //   this.contactGateway.delete(this.contact.id)\r\n            //     .then(() => { this.router.navigateToRoute('contacts'); });\r\n           // this.router.navigateToRoute('contacts');\r\n        }\r\n    }\r\n\r\n}","export class CleanupContent {\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Cleanup{\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n        this.temporaryUser = NewInstance.of(User);\r\n        this.temporaryUser.name = \"X\"; \r\n        this.temporaryUser.mail = 'a@b.c';\r\n        this.temporaryUser.password = '1';\r\n    }\r\n\r\n    validationFailed = false;\r\n    displayMessages = false;  \r\n\r\n    activateUser() {\r\n        console.log(\"Activate user \" + this.temporaryUser.name + \" with messages : \" +this.displayMessages );\r\n    }\r\n\r\n    processTask() {\r\n       console.log(\"Process deletion task for user : \" + this.temporaryUser.name);\r\n    }\r\n\r\n    testSubmitButton3() {\r\n        console.log(\"Test Submit Buton 3 : \");//+ this.temporaryUser.name);\r\n    }\r\n}","export class AddUser {\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Statistics {\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n    }\r\n\r\n    validationFailed = false;\r\n\r\n}","import { bindable } from 'aurelia-framework';\r\n\r\nexport class ListEditorCustomElement {\r\n\r\n    @bindable items = [];\r\n    @bindable addItem;\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { BroadcastGateway } from './../../services/broadcast-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(BroadcastGateway, User)\r\nexport class History {\r\n    constructor(broadcastGateway, user) {\r\n        this.user = User;\r\n        this.broadcastGateway = BroadcastGateway;\r\n    }\r\n\r\n    vipName = \"\";\r\n    isVeryImportant = false; // vipStatus\r\n\r\n    addVIP(name, status) {\r\n        var vip = NewInstance.of(User);\r\n        // TODO : Add or overwrite entry in table 'Followers'\r\n            //    return this.broadcastGateway.addVip(this.vipName,this.isVeryImportant)\r\n    //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }   \r\n\r\n   \r\n\r\n    removeVIP(name, status) {\r\n        var vip = NewInstance.of(User);\r\n        //    return this.broadcastGateway.removeVip(this.vipName,this.isVeryImportant)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }   \r\n    \r\n}","import {inject, DOM} from 'aurelia-framework';\n\n@inject(DOM.Element)\nexport class SubmitTaskCustomAttribute {\n\n  constructor(element) {\n    this.element = element;\n    this.onSubmit = this.trySubmit.bind(this);\n  }\n\n  attached() {\n    this.element.addEventListener('submit', this.onSubmit);\n    this.element.isSubmitTaskExecuting = false;\n  }\n\n  trySubmit(e) {\n    e.preventDefault();\n    if (this.task) {\n      return;\n    }\n\n    this.element.isSubmitTaskExecuting = true;\n    this.task = Promise.resolve(this.value()).then(\n      () => this.completeTask(),\n      () => this.completeTask());\n  }\n\n  completeTask() {\n    this.task = null;\n    this.element.isSubmitTaskExecuting = false;\n  }\n\n  detached() {\n    this.element.removeEventListener('submit', this.onSubmit);\n  }\n}\n","export class AccountDetail {\r\n\r\n    activate(temporaryUser) {\r\n        this.user = temporaryUser;\r\n    }\r\n}","import {bindable} from 'aurelia-framework';\n\nexport class ListEditorCustomElement {\n  \n  @bindable items = [];\n  @bindable addItem;\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway)\r\nexport class UserCreation {\r\n    constructor(userGateway) {\r\n        this.userGateway = userGateway;\r\n        this.newUser = NewInstance.of(User);\r\n   }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    addUser() {\r\n        var msg = \"Add user  \" + newUser.user.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n        this.newUser.name.length == 0 ||\r\n        this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mailAddress);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.name != null && existingUser.name.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            return this.userGateway.add(this.newUser);\r\n        }\r\n    }\r\n}\r\n","export class FilterByValueConverter {\n  toView(array, value, ...properties) {\n    value = (value || '').trim().toLowerCase();\n    \n    if (!value) {\n      return array;\n    }\n    return array.filter(item => \n      properties.some(property => \n        (item[property] || '').toLowerCase().includes(value)));\n  }\n}\n","export class GroupByValueConverter {\n  toView(array, property) {\n    const groups = new Map();\n    for (let item of array) {\n      let key = item[property];\n      let group = groups.get(key);\n      if (!group) {\n        group = { key, items: [] };\n        groups.set(key, group);\n      }\n      group.items.push(item);\n    }\n    return Array.from(groups.values());\n  }\n}\n","export class OrderByValueConverter {\n  toView(array, property, direction = 'asc') {\n    array = array.slice(0);\n    const directionFactor = direction === 'desc' ? -1 : 1;\n    array.sort((item1, item2) => {\n      const value1 = item1[property];\n      const value2 = item2[property];\n      if (value1 > value2) {\n        return directionFactor;\n      } else if (value1 < value2) {\n        return -directionFactor;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../../services/user-gateway';\r\nimport { User } from './../../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Statistics {\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n        this.user = NewInstance.of(User);\r\n    }\r\n\r\n    validationFailed = false;\r\n    displayMessages = false;\r\n\r\n    retrieveSummary() {\r\n        console.log(\"Retrieve summary : \")\r\n    }\r\n\r\n    emptyGrid() {\r\n        console.log(\"Empty summary results : \")\r\n    }\r\n    \r\n}","import { Router } from 'aurelia-router';\r\nimport { ValidationController, ValidationRules, validateTrigger } from 'aurelia-validation';\r\n\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\n\r\n@inject(BroadcastGateway, Router, NewInstance.of(ValidationController))\r\nexport class BroadcastImage {\r\n\r\n    image = null;\r\n    \r\n    constructor(broadcastGateway, router, validationController) {\r\n        validationController.validateTrigger = validateTrigger.change;\r\n        this.broadcastGateway = broadcastGateway;\r\n        this.router = router;\r\n        this.validationController = validationController;\r\n\r\n        // ValidationRules\r\n        //     .ensure('image')\r\n        //     .satisfiesRule('notEmpty')\r\n        //     .withMessage('${$displayName} must contain 1 file.')\r\n        //     .satisfiesRule('maxFileSize', 1024 * 1024 * 2)\r\n        //     .satisfiesRule('fileExtension', ['.jpg', '.png'])\r\n        //     .on(this);\r\n    }\r\n\r\n\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { computedFrom } from 'aurelia-framework';\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\nimport { User } from './../../../models/user';\r\nimport { Message } from './../../../models/message';\r\nimport { Toolkit } from './../../../models/toolkit';\r\n\r\n@inject(BroadcastGateway, User, NewInstance.of(Message))\r\nexport class Broadcast {\r\n    constructor( broadcastGateway, user, message) {\r\n        this.broadcastGateway = BroadcastGateway;\r\n       this.user = User;\r\n        this.message = message;\r\n        this.toolkit =  new Toolkit();\r\n    }\r\n\r\n    isSending = false;\r\n    isImageAttached = false;\r\n    imageUrl = null;\r\n    selectedFiles = null;\r\n    selectedImage = null;\r\n\r\n   \r\n    @computedFrom('isImageAttached')\r\n    get computedImageUrl() { \r\n        console.log(\"Return image URL :\" + this.imageUrl);\r\n      return this.imageUrl;\r\n    }\r\n\r\n    detachImage() {\r\n        this.imageUrl = null;\r\n        this.isImageAttached = false;\r\n    }\r\n\r\n    updateImageUrl() {\r\n        console.log(\"Update Image URL\");\r\n       if (this.selectedFiles.length > 0) {\r\n            this.isImageAttached = false;\r\n            this.selectedImage = this.selectedFiles[0];\r\n            this.readFileURL(this.selectedImage, this);\r\n            this.isImageAttached = this.imageUrl!=null; \r\n       } else {\r\n           detachImage();\r\n        }\r\n    }\r\n    \r\n    updatePreview() {\r\n        console.log(\"Update Preview\");\r\n       this.updateImageUrl();\r\n        console.log(\"Updated Image URL :\" + this.imageUrl);\r\n    }\r\n\r\n    readFileURL(selectedFile, broadcast) {\r\n        // load data asynchronously\r\n        var reader = new FileReader();\r\n        reader.onload = (function (selectedImage) {\r\n            return function (e) {\r\n                console.log(\"Selected image :\" + e.target.result);\r\n                broadcast.imageUrl = e.target.result;\r\n            };\r\n        })(selectedFile);\r\n\r\n        reader.readAsDataURL(selectedFile);\r\n    }\r\n\r\n    sendMessage() {\r\n        isSending = true;\r\n        console.log(\"Send message\");\r\n        if (isValidMessage()) {\r\n            this.message.image = this.imageUrl;\r\n            this.message.userId = this.user.id;\r\n            this.message.day = this.toolkit.getDay();\r\n            this.message.time = this.toolkit.getTime();\r\n            // TODO : send message --> add message to table 'tweets'\r\n            //    return this.broadcastGateway.addMessage(text, image)\r\n            //        .then(() => this.router.navigateToRoute('login'));\r\n            this.message.reset();\r\n        }   \r\n        isSending = false;\r\n\r\n    }\r\n\r\n    isValidMessage() {\r\n        if (this.isImageAttached) {\r\n            return true;\r\n        } else {\r\n            return this.message.text.length > 0;\r\n        }\r\n    }\r\n\r\n}","import {inject, NewInstance} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\n\nimport { UserGateway } from './../../../services/user-gateway';\n\n@inject(UserGateway, Router, NewInstance.of(ValidationController))\nexport class ContactPhoto {\n\n  photo = null;\n\n  constructor(userGateway, router, validationController) {\n    validationController.validateTrigger = validateTrigger.change;\n    this.userGateway = userGateway;\n    this.router = router;\n    this.validationController = validationController;\n\n  //   ValidationRules\n  //     .ensure('photo')\n  //       .satisfiesRule('notEmpty')\n  //         .withMessage('${$displayName} must contain 1 file.')\n  //       .satisfiesRule('maxFileSize', 1024 * 1024 * 2)\n  //       .satisfiesRule('fileExtension', ['.jpg', '.png'])\n  //     .on(this);\n   }\n\n  // activate(params, config) {\n  //   return this.contactGateway.getById(params.id).then(contact => {\n  //     this.contact = contact;\n  //     config.navModel.setTitle(this.contact.fullName);\n  //   });\n  // }\n\n  save() {\n    console.log(\"Save\");\n    // this.validationController.validate().then(errors => {\n    //   if (errors.length > 0) {\n    //     return;\n    //   }\n\n    //   this.contactGateway.updatePhoto(this.contact.id, this.photo.item(0)).then(() => {\n    //       this.router.navigateToRoute('contact-details', { id: this.contact.id });\n    //   });\n    // });\n  }\n}\n","function tweetCreation() {\r\n    // Private properties\r\n    var tweetsTable = document.getElementById(\"extractedTweets\");\r\n    var tweetTbl = new tweetTable(tweetsTable);\r\n    var tableUpdateRequested = false;\r\n\r\n    // Private methods\r\n    function addImage(selectedFile) {\r\n        // load data asynchronously\r\n        var reader = new FileReader();\r\n        reader.onload = (function (selectedImage) {\r\n            return function (e) {\r\n                // create preview.\r\n                var img = document.getElementById('preview');\r\n                img.className = 'preview';\r\n                img.src = e.target.result;\r\n                img.title = selectedImage.name;\r\n                // insert preview\r\n                var preview = document.getElementById('attachedImage');\r\n                preview.className = \"preview\";\r\n                preview.insertBefore(img, null);\r\n            };\r\n        })(selectedFile);\r\n\r\n        reader.readAsDataURL(selectedFile);\r\n    }\r\n\r\n    // Private objects\r\n    function tweetRecord(userID, day, time, message, picture) {\r\n        this.userID = userID;\r\n        this.day = day;\r\n        this.time = time;\r\n        this.message = message;\r\n        this.attachment = picture;\r\n    }\r\n\r\n    // ______________________________________________________\r\n    // Public methods\r\n    var tweetCreationObject = {\r\n\r\n        createTweet: function (userID, day, time, message, picture) {\r\n            return new tweetRecord(userID, day, time, message, picture);\r\n        },\r\n\r\n        // Event Handler\r\n        // Image related to current tweet\r\n        selectFile: function (e) {\r\n            var openFileDialog = document.getElementById('addPicture');\r\n            if (openFileDialog) {\r\n                openFileDialog.click();\r\n            }\r\n            e.preventDefault(); // prevent reload\r\n        },\r\n\r\n        evaluateFileDialog: function (e) {\r\n            var selectedFiles = e.target.files;\r\n            if (selectedFiles.length > 0) {\r\n                addImage(selectedFiles[0]);\r\n            }\r\n        },\r\n\r\n        detachImage: function () {\r\n            var preview = document.getElementById('attachedImage');\r\n            preview.innerHTML = '';\r\n            preview.className = 'hidden';\r\n        },\r\n\r\n        // ______________________________________________________\r\n        // Uplod Data - text, image and meta data\r\n\r\n        publishTweet: function (e) {\r\n            var msg = document.forms.defineTweet.elements.message.value.trim();\r\n            var img = document.getElementById('preview');\r\n            console.log(msg.value);\r\n            console.log(img.currentSrc.substring(0, 10));\r\n\r\n            var newTweet = new tweetRecord(\r\n                activeUser.id,\r\n                mwaToolset.getDay(),\r\n                mwaToolset.getTime(),\r\n                msg,\r\n                img.currentSrc\r\n            );\r\n\r\n            if (storageWriter.uploadTweet(newTweet)) {\r\n                // ER : only update timeline if user is listed in current timeline\r\n                tableUpdateRequested = true;\r\n                // Update timeline\r\n                if (tableUpdateRequested) {\r\n                    //XX var tweets = storageReader.getSubsetOfTweetsByID(tweetFilter);\r\n                    tweets = availableTweets;\r\n                    tweetTbl.updateTable(tweets);\r\n                    tweetsTable.addEventListener('click', tweetTbl.findTweets, false);\r\n                    tableUpdateRequested = false;\r\n                }\r\n            } else {\r\n                alert(\"Publishing tweet failed. Please try again.\");\r\n            }\r\n        }\r\n\r\n    };\r\n    return tweetCreationObject;\r\n\r\n}\r\n\r\n// ______________________________________________________\r\n// Event Handler\r\n\r\n(function () {\r\n    var tweetCreator = new tweetCreation();\r\n\r\n    // submit by image-click\r\n    var uploadCommand = document.getElementById('sendMsg');\r\n    uploadCommand.addEventListener('click', tweetCreator.publishTweet, false);\r\n\r\n    // add a picture\r\n    var fileSelectorProxy = document.getElementById('camera');\r\n    fileSelectorProxy.addEventListener('click', tweetCreator.selectFile, false);\r\n\r\n    var fileSelector = document.getElementById('addPicture');\r\n    fileSelector.addEventListener('change', tweetCreator.evaluateFileDialog, false);\r\n\r\n    // detach a picture\r\n    var wasteBasket = document.getElementById('detach');\r\n    wasteBasket.addEventListener('click', tweetCreator.detachImage, false);\r\n\r\n} ());\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\nimport { User } from './../../../models/user';\r\n\r\n@inject(BroadcastGateway, User)\r\nexport class History {\r\n    constructor(broadcastGateway, user) {\r\n        this.user = User;\r\n        this.broadcastGateway = BroadcastGateway;\r\n    }\r\n\r\n    vipName = \"\";\r\n    isVeryImportant = false; // vipStatus\r\n\r\n    retrieveMessages() {\r\n        // TODO Create message filter from input \r\n        var persons = new array();\r\n        // TODO : Add or overwrite entry in table 'Followers'\r\n        //    return this.broadcastGateway.retrieveMessages(persons)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }\r\n\r\n\r\n\r\n    removeMessages() {\r\n        // TODO Create message filter from input \r\n        var messages = new array();\r\n        //    return this.broadcastGateway.removeMessages(messages)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }\r\n\r\n}"],"sourceRoot":".."}