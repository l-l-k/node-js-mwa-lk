{"version":3,"sources":["src/app.js","src/authorization-step.js","src/edit-account.js","src/environment.js","src/login.js","src/logout.js","src/main.js","src/management.js","src/not-found.js","src/signup.js","src/tweet.js","src/welcome-screen.js","src/models/broadcast.js","src/models/user.js","src/resources/index.js","src/services/user-gateway.js"],"names":["App","configureRouter","config","router","title","addPipelineStep","map","route","redirect","name","moduleId","nav","settings","logonRequired","restrictedToAdmins","logoutRequired","mapUnknownRoutes","fallbackRoute","AuthorizationStep","user","run","instruction","next","console","log","mail","instructions","getAllInstructions","isRestrictedRoute","some","i","toString","isAdmin","alert","cancel","isValidUser","isAuthenticated","EditAccount","isBusy","applyChanges","msg","password","debug","testing","Login","performLogin","isau","navModel","setTitle","contact","fullName","Logout","activate","reset","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Management","NotFound","Signup","performSignup","Tweet","WelcomeScreen","fromObject","src","Object","assign","message","image","timestamp","id","on","User","vips","nips","UserGateway"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { AuthorizationStep } from 'authorization-step';\n\nexport class App {\n\n  // Logout-Pipeline:  \n  // => a navigation setting (here: logoutRequired) gets the route invoked\n  //    each time a navigation request is issued, so the activate-method gets called\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Postillion';\n    config.addPipelineStep('authorize', AuthorizationStep);\n    config.map([\n      { route: '', redirect: 'home' },\n      { route: 'home', name: 'home', moduleId: 'welcome-screen', nav: false },\n      { route: 'login', name: 'login', moduleId: 'login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'signup', nav: true, title: 'Signup' },\n      { route: 'account', name: 'account', moduleId: 'edit-account', nav: true, title: 'Edit Account' },\n      { route: 'tweet', name: 'tweet', moduleId: 'tweet', nav: true, title: 'Postoffice', settings: { logonRequired: true } },\n      { route: 'management', name: 'management', moduleId: 'management', nav: true, title: 'Management', settings: { restrictedToAdmins: true } },\n      { route: 'logout', name: 'logout', moduleId: 'logout', nav: true, title: 'Logout', settings: { logoutRequired: true } }\n    ]);\n    config.mapUnknownRoutes('not-found');\n    config.fallbackRoute('home');\n  }\n\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { Redirect } from 'aurelia-router';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class AuthorizationStep {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    run(instruction, next) {\r\n        //console.log(user.toString());\r\n        console.log(\"Checking route permissions of user \" + this.user.mail);\r\n        var instructions = instruction.getAllInstructions()\r\n\r\n        // Administration         \r\n        var isRestrictedRoute = instructions.some(\r\n            i => i.config.settings.restrictedToAdmins);\r\n\r\n        console.log('Is route restricted for admins ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isAdmin = this.user.isAdmin;\r\n            console.log('Is Admin ? ' + isAdmin);\r\n            if (!isAdmin) {\r\n                alert('Please register as administrator.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Run core application\r\n        isRestrictedRoute = instructions.some(\r\n            i => i.config.settings.logonRequired);\r\n\r\n        console.log('Does route require login ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isValidUser = this.user.isAuthenticated;\r\n            console.log('Is valid User ? ' + isValidUser);\r\n            if (!isValidUser) {\r\n                alert('Please login first.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Logout\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.logoutRequired);\r\n\r\n        // console.log('Does route require logout ? ' + isRestrictedRoute);\r\n        // if (isRestrictedRoute) {\r\n        //     console.log(\"Logout \" + this.user.mail)\r\n        //     if (this.user !== null) {\r\n        //         console.log(\"Before : \" + this.user.mail);\r\n        //         this.user = NewInstance.of(User)\r\n        //         console.log(\"After : \" + this.user.mail);\r\n        //     }\r\n        // }\r\n\r\n        // Continue        \r\n        return next();\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\n//import { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n//@inject(UserGateway)\r\n@inject(User)\r\nexport class EditAccount {\r\n    constructor(user) {\r\n        //     this.userGateway = userGateway;\r\n        this.user = user;\r\n    }\r\n\r\n    isBusy = false;\r\n\r\n    applyChanges() {\r\n        var msg = \"New data  \" + this.toString();\r\n        console.log(msg);\r\n        alert(msg);\r\n        // TODO : try register as new user\r\n    }\r\n\r\n    toString() {\r\n        var msg = \"Current user : \" + this.user.mail + \" \" + this.user.name + \" \" + this.user.password;\r\n        return msg;\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import { inject } from 'aurelia-framework';\r\n//import { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n//@inject(UserGateway)\r\n@inject(User)\r\nexport class Login {\r\n    constructor(user) {\r\n        //     this.userGateway = userGateway;\r\n        this.user = user;\r\n    }\r\n\r\n    isBusy = false;\r\n\r\n    performLogin() {\r\n        // TODO: Logout any active user\r\n        var msg = \"Login now  \" + this.user.mail + \" \" + this.user.name + \" \" + this.user.password\r\n        console.log(msg);\r\n        alert(msg);\r\n        // TODO: Validate user input\r\n\r\n        // TODO : Enable postings\r\n        this.user.isau\r\n        config.navModel.setTitle(this.contact.fullName);\r\n    \r\n    }\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class Logout {\r\n    constructor(user) {\r\n        this.user = user;\r\n        console.log(\"Logout Route initialised with \" + this.user.mail)\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"activated: Logout \" + this.user.mail )\r\n        if (this.user !== null) {\r\n            console.log(\"Before Reset: \" + this.user.mail);\r\n            this.user.reset()\r\n            console.log(\"After Reset: \"+ this.user.mail);\r\n        }\r\n    }\r\n}\r\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n  \n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Management {}\r\n","export class NotFound {}\n","import { inject } from 'aurelia-framework';\r\n//import { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n//@inject(UserGateway)\r\n@inject(User)\r\nexport class Signup {\r\n    constructor(user) {\r\n        //     this.userGateway = userGateway;\r\n        this.user = user;\r\n    }\r\n\r\n    isBusy = false;\r\n\r\n    performSignup() {\r\n        var msg = \"Signup  \" + this.toString();\r\n        console.log(msg);\r\n        alert(msg);\r\n        // TODO : try register as new user\r\n    }\r\n\r\n    toString() {\r\n        var msg = \"Current user : \" + this.user.mail + \" \" + this.user.name + \" \" + this.user.password;\r\n        return msg;\r\n    }\r\n}\r\n","export class Tweet {}\r\n","export class WelcomeScreen {}","import { ValidationRules } from 'aurelia-validation';\r\n\r\nexport class Tweet {\r\n    static fromObject(src) {\r\n        const user = Object.assign(new Tweet(), src);\r\n        return user;\r\n    }\r\n\r\n    constructor() {\r\n        ValidationRules\r\n            .on(this);\r\n    }\r\n\r\n    message = '';\r\n    image = '';\r\n    timestamp = '';\r\n    id = '';\r\n}","//import { ValidationRules } from 'aurelia-validation';\r\n\r\n///@inject(ValidationRules);\r\nexport class User {\r\n    static fromObject(src) {\r\n        const user = Object.assign(new User(), src);\r\n        return user;\r\n    }\r\n\r\n    mail = 'a@b.c';\r\n    name = 'otto';\r\n    password = '1';\r\n    id = '0';\r\n\r\n    isAuthenticated = false;    \r\n    isAdmin = false;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    vips = []; // Very Important Persons (alwasy visible)\r\n    nips = []; // Normal Important Persons (visible on demand)\r\n\r\n    // constructor() {\r\n    //     ValidationRules\r\n    //         .ensure('mail')\r\n    //         .required()\r\n    //         .maxLength(250)\r\n    //         .ensure('name')\r\n    //         .required()\r\n    //         .maxLength(100)\r\n    //         .ensure('password')\r\n    //         .required()\r\n    //         .maxLength(100)\r\n    //         .ensure('id')\r\n    //         .required()\r\n    //         .maxLength(100)\r\n    //         .on(this);\r\n    // }\r\n\r\n    toString() {\r\n        var msg = \"Current user (ID = \" + this.id + \") : \" + this.mail + \" \" + this.name + \" \" + this.password;\r\n        return msg;\r\n    }\r\n    \r\n    reset() {\r\n        this.mail = '';\r\n        this.name = '';\r\n        this.password = '';\r\n        this.id = '0';\r\n\r\n        this.isAuthenticated = false;\r\n        this.isAdmin = false;\r\n\r\n        // Lists of tweeters whom this user wants to follow\r\n        this.vips = []; // Very Important Persons (alwasy visible)\r\n        this.nips = []; // Normal Important Persons (visible on demand)\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class UserGateway{}"],"sourceRoot":".."}