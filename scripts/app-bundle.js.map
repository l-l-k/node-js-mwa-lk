{"version":3,"sources":["src/app.js","src/authorization-step.js","src/edit-account.js","src/environment.js","src/login.js","src/logout.js","src/main.js","src/management.js","src/not-found.js","src/signup.js","src/tweet.js","src/welcome-screen.js","src/x.js","src/administration/index.js","src/administration/main.js","src/models/broadcast-filter.js","src/models/message.js","src/models/toolkit.js","src/models/user.js","src/resources/index.js","src/services/broadcast-gateway.js","src/services/user-gateway.js","src/validation/bootstrap-form-validation-renderer.js","src/validation/index.js","src/validation/rules.js","src/administration/components/admin-menu.js","src/administration/components/cleanup-content.js","src/administration/components/cleanup.js","src/administration/components/populate.js","src/administration/components/statistics.js","src/broadcasts/components/vip-editor.js","src/broadcasts/components/vip.js","src/resources/attributes/submit-task.js","src/resources/elements/account-detail.js","src/resources/elements/list-editor.js","src/resources/elements/user-creation.js","src/resources/value-converters/filter-by.js","src/resources/value-converters/group-by.js","src/resources/value-converters/order-by.js","src/administration/components/statistics/summary.js","src/broadcasts/components/broadcast/broadcast.js","src/broadcasts/components/history/history.js","src/broadcasts/components/history/message-filter.js","src/broadcasts/components/history/tweetTable.js"],"names":["App","configureRouter","config","router","title","addPipelineStep","map","route","redirect","name","moduleId","nav","settings","logonRequired","logoutRequired","mapUnknownRoutes","fallbackRoute","AuthorizationStep","user","run","instruction","next","console","log","mail","instructions","getAllInstructions","isRestrictedRoute","toString","isAdmin","alert","cancel","isValidUser","isAuthenticated","EditAccount","eventAggregator","userGateway","nameAlreadyChecked","mailAlreadyChecked","hasAdressChanged","hasNameChanged","hasPasswordChanged","isBusy","validationFailed","addressExists","nameExists","isValidPassword","ea","temporaryUser","nickname","password","activate","self","subscription","subscribe","updatedUser","subscription3","c","uarray","content","forEach","element","uid","id","update","deactivate","dispose","applyChanges","msg1","msg","validateInputFields","hasValidChanges","CheckNameAndMail","length","toLowerCase","hasChanges","debug","testing","usersUrl","Login","Lrouter","e","existingUser","subscription1","isSuccess","getVIPs","subscription2","x","a","active","vips","push","vip","nips","navigateToRoute","performLogin","verify","Logout","reset","configure","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","Management","NotFound","Signup","newUser","add","save","performSignup","getByMailAddress","Tweet","WelcomeScreen","X","container","get","addRoute","Administration","BroadcastFilter","fromObject","src","filter","Object","assign","persons","Array","showNoMessages","showMyMessages","showTweetsOfSpecialUser","nameOfSpecialUser","showTweetsOfActiveVips","broadcastGateway","getsomeMessages","firstday","lastDay","Message","text","image","day","time","userId","Toolkit","createGuid","replace","r","Math","random","v","getDay","now","Date","month","getMonth","slice","getDate","getFullYear","getTime","getHours","getMinutes","getSeconds","isEven","number","resetSelectionRange","selectionRange","User","tool","becomeFollower","isVeryImportantPerson","globalResources","BroadcastGateway","httpClient","broadcasts","withBaseUrl","addVIP","userID","vipName","ToFollow","getByName","res","removeVIP","ToUnFollow","updateVIPStatus","isActiveVIP","PriorityChanger","addMessage","post","success","Boolean","publish","error","getMessages","currentUser","messages","JSON","parse","getSomeMessages","firstDay","removeMessages","useriD","sucess","UserGateway","users","admins","followers","remove","modifiedUser","username","cont","transferContentToUser","mailAddress","getAll","fetch","response","json","dto","getById","dbusers","testServerConnection","testLocalHerokuDB","setupDB","BootstrapFormValidationRenderer","render","unrender","elements","formGroup","closest","classList","message","document","createElement","className","textContent","parentNode","insertBefore","nextSibling","querySelector","removeChild","querySelectorAll","registerHandler","customRule","value","obj","undefined","isNaN","maxSize","FileList","from","every","file","size","hasOneOfExtensions","extensions","fileName","some","endsWith","ext","allHaveOneOfExtensions","files","AdminMenu","task","obsoleteUser","tryAddUser","tryDeleteUser","confirm","CleanupContent","Cleanup","of","validationController","displayMessages","activateUser","processTask","testSubmitButton3","AddUser","Statistics","ListEditorCustomElement","History","isVeryImportant","status","SubmitTaskCustomAttribute","Element","onSubmit","trySubmit","bind","attached","addEventListener","isSubmitTaskExecuting","preventDefault","Promise","resolve","completeTask","detached","removeEventListener","AccountDetail","UserCreation","addUser","FilterByValueConverter","toView","array","properties","trim","item","property","includes","GroupByValueConverter","groups","Map","key","group","items","set","values","OrderByValueConverter","direction","directionFactor","sort","item1","item2","value1","value2","retrieveSummary","emptyGrid","Broadcast","isImageAttached","imageUrl","selectedFiles","selectedImage","toolkit","detachImage","updateImageUrl","readFileURL","updatePreview","selectedFile","broadcast","reader","FileReader","onload","target","result","readAsDataURL","sendMessage","isValidMessage","encodeURIComponent","receivedTweets","timeRange","senderFilter","useRerestrictedTimeRange","xshowTweetsOfActiveVipsChanged","currentTarget","activeElement","checked","timeRangeUsageChanged","cleanupTable","retrieveMessages","MessageFilter","msgFilter","history","tweetTable","dataTable","activeTable","tableType","sorting","createTableHeader","columns","header","row","col","i","createTextNode","appendChild","populateTable","tweetsToDisplay","indexOfFirstTweetProperty","amountOfColumns","body","tweetData","userRecord","rowIndex","setRowColor","colIndex","attachment","setAttribute","index","mwaToolset","removeAttribute","selectFromTo","range","rows","firstIndex","lastIndex","toggle","deselectAll","region","getElementsByTagName","deleteSelectedRows","selectedRows","getSelectedRows","selectedItems","getSelectedItems","storageWriter","deleteSelectedTweets","tweets","storageReader","getSubsetOfTweetsByID","updateContent","table","getElementsByClassName","dayIndex","timeIndex","children","innerText","tweetCreator","createTweet","subsetOfTweets","innerHTML","err","sortTextData","columnIndex","swap","j","toggleSorting","tableObject","setTableType","typeOfTable","updateTable","findTweets","selectedColumn","currentRow","nameOfRegion","nodeName","startIndex","upperBound","cellIndex","ctrlKey","shiftKey","allRows","deleteAllTweets","deleteUserTweets"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { AuthorizationStep } from 'authorization-step';\n\nexport class App {\n\n  // Logout-Pipeline:  \n  // => a navigation setting (here: logoutRequired) gets the route invoked\n  //    each time a navigation request is issued, so the activate-method gets called\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Postillion';\n    config.addPipelineStep('authorize', AuthorizationStep);\n    config.map([ \n      { route: '', redirect: 'home' },\n      { route: 'home', name: 'home', moduleId: 'welcome-screen', nav: false },\n      { route: 'login', name: 'login', moduleId: 'login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'signup', nav: true, title: 'Signup' },\n      { route: 'account', name: 'account', moduleId: 'edit-account', nav: true, title: 'Edit Account' },\n      { route: 'tweet', name: 'tweet', moduleId: 'tweet', nav: true, title: 'Postoffice', settings: { logonRequired: true } },\n      { route: 'logout', name: 'logout', moduleId: 'logout', nav: true, title: 'Logout', settings: { logoutRequired: true } }\n    ]);\n    config.mapUnknownRoutes('not-found');\n    config.fallbackRoute('home');\n  }\n}\n\n//      { route: 'administration', name: 'administration', moduleId: 'administration/adm', nav: true, title: 'Management', settings: { restrictedToAdmins: true } },","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { Redirect } from 'aurelia-router';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class AuthorizationStep {\r\n    constructor(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    run(instruction, next) {\r\n        //console.log(user.toString());\r\n        console.log(\"Checking route permissions of user \" + this.user.mail);\r\n        var instructions = instruction.getAllInstructions()\r\n\r\n        // Administration         \r\n        var isRestrictedRoute = false;\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.restrictedToAdmins);\r\n\r\n        console.log('Is route restricted for admins ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isAdmin = this.user.isAdmin;\r\n            console.log('Is Admin ? ' + isAdmin);\r\n            if (!isAdmin) {\r\n                alert('Please register as administrator.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Run core application\r\n        // isRestrictedRoute = instructions.some(\r\n        //     i => i.config.settings.logonRequired);\r\n\r\n        console.log('Does route require login ? ' + isRestrictedRoute);\r\n        if (isRestrictedRoute) {\r\n            console.log(this.user.toString());\r\n            var isValidUser = this.user.isAuthenticated;\r\n            console.log('Is valid User ? ' + isValidUser);\r\n            if (!isValidUser) {\r\n                alert('Please login first.');\r\n                console.log('Redirect to login');\r\n                return next.cancel(new Redirect('login'));\r\n            }\r\n        }\r\n\r\n        // Logout : no action required\r\n\r\n        \r\n        // Continue        \r\n        return next();\r\n    }\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\n\r\n@inject(EventAggregator, UserGateway, User)\r\nexport class EditAccount {\r\n    nameAlreadyChecked = false;\r\n    mailAlreadyChecked = false;\r\n    hasAdressChanged = false;\r\n    hasNameChanged = false;\r\n    hasPasswordChanged = false;\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    constructor(eventAggregator, userGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        console.log(user.toString());\r\n        this.temporaryUser = new User();\r\n        this.temporaryUser.mail = this.user.mail;\r\n        this.temporaryUser.nickname = this.user.nickname;\r\n        this.temporaryUser.password = this.user.password;\r\n\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Edit-Account activted\");\r\n        var self = this;\r\n        this.subscription = this.ea.subscribe('user-updated', function (updatedUser) {\r\n            self.user.mail = updatedUser.mail;\r\n            self.user.nickname = updatedUser.nickname;\r\n            self.user.password = updatedUser.password;\r\n            console.log(\"Changed user data : \" + self.user.toString());\r\n        });\r\n\r\n       \r\n\r\n        this.subscription3 = this.ea.subscribe('user-mailNameCheck', function (c) {          \r\n            var uarray = c.content;\r\n            uarray.forEach(function (element) {\r\n           if (element.uid != self.user.id)\r\n           {\r\n               if (element.name == self.user.nickname)\r\n               {\r\n                   \r\n                   self.nameExists = true;\r\n               }    \r\n               if (element.mail == self.user.mail)\r\n               {\r\n                   self.addressExists = true;\r\n               }    \r\n           }    \r\n       }, self);\r\n\r\n       if (self.addressExists == false && self.nameExists == false)\r\n       {\r\n           self.userGateway.update(self.user, self.temporaryUser);\r\n       }    \r\n\r\n        });\r\n\r\n    }\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n        this.subscription3.dispose();        \r\n    }\r\n\r\n    applyChanges() {\r\n        var msg1 = \"Original user : \" + this.user.toString();\r\n        console.log(msg1);\r\n        var msg = \"Input :  \" + this.temporaryUser.mail + \" \" + this.temporaryUser.nickname + \" \" + this.temporaryUser.password;\r\n        console.log(msg);\r\n        //alert(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validateInputFields();\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed : Empty fields\");\r\n            return;\r\n        }\r\n\r\n        if (!this.hasValidChanges()) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.nameAlreadyChecked = false\r\n        this.mailAlreadyChecked = false;\r\n        this.userGateway.CheckNameAndMail(this.temporaryUser.mail, this.temporaryUser.nickname);\r\n     //   this.userGateway.update(this.user, this.temporaryUser, this.hasAdressChanged, this.hasNameChanged,this.hasPasswordChanged );\r\n    }\r\n\r\n    validateInputFields() {\r\n        this.validationFailed =\r\n            this.temporaryUser.mail.length == 0 ||\r\n            this.temporaryUser.nickname.length == 0 ||\r\n            this.temporaryUser.password.length == 0;\r\n    }\r\n\r\n    hasValidChanges() {\r\n        this.hasAdressChanged = this.user.mail.toLowerCase() !== this.temporaryUser.mail.toLowerCase();\r\n        this.hasNameChanged = this.user.nickname.toLowerCase() !== this.temporaryUser.nickname.toLowerCase();\r\n        this.hasPasswordChanged = this.user.password !== this.temporaryUser.password;\r\n\r\n        var hasChanges = this.hasAdressChanged || this.hasNameChanged || this.hasPasswordChanged;\r\n        if (!hasChanges) {\r\n            console.log(\"Input-Validation result : No changes\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n}","export default {\n  debug: true,\n  testing: true,\n  usersUrl: 'http://localhost:3000/',\n};\n","import { inject } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router, EventAggregator, UserGateway, User)\r\nexport class Login {\r\n    constructor(router, eventAggregator, userGateway, user) {\r\n        this.Lrouter = router;\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.user.mail = \"a@a.a\";\r\n        this.user.password = \"a\";\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = true;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    activate() {\r\n        console.log(\"Login activted\");\r\n        var self = this;\r\n        this.subscription = this.ea.subscribe('login-check', function (e) {\r\n            console.log(\"Login Event raised\");\r\n            console.log(e);\r\n            if (e != \"[]\") {\r\n                self.user.id = e.existingUser.id;\r\n                self.user.mail = e.existingUser.mail;\r\n                self.user.nickname = e.existingUser.nickname;\r\n                self.user.password = e.existingUser.password;\r\n                self.user.isAuthenticated = \"true\";\r\n\r\n                self.userGateway.isAdmin(self.user.id);\r\n\r\n            }\r\n        });\r\n\r\n        this.subscription1 = this.ea.subscribe('admin-check', function (e) {\r\n            console.log(\"AdminCheck Event raised\");\r\n            console.log(e);\r\n            self.user.isAdmin = e.isSuccess;\r\n            var msg = \"After Login : \" + self.user.toString();\r\n            console.log(msg);\r\n            self.userGateway.getVIPs(self.user.id);\r\n\r\n        });\r\n\r\n\r\n        this.subscription2 = this.ea.subscribe('vips-incoming', function (e) {\r\n            console.log(e.x);\r\n            if (!(e.x == \"[]\" || e.x == \"\")) {\r\n\r\n\r\n                var a = e.x;\r\n                console.log(\"wir haben \" + a);\r\n                a.forEach(function (element) {\r\n                    if (element.active == true) {\r\n                        self.user.vips.push(element.vip);\r\n                    } else {\r\n                        self.user.nips.push(element.vip);\r\n                    }\r\n                }, this);\r\n            }\r\n            self.Lrouter.navigateToRoute('tweet');\r\n        });\r\n\r\n    }\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n    }\r\n    performLogin() {\r\n\r\n\r\n        var msg = \"Before Login : \" + this.user.toString();\r\n        console.log(msg);\r\n        //alert(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed = this.user.mail.length == 0 || this.user.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed : Empty fields\");\r\n            return;\r\n        }\r\n\r\n        this.userGateway.verify(this.user);\r\n\r\n    }\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { User } from './models/user';\r\n\r\n@inject(User)\r\nexport class Logout {\r\n    constructor(user) {\r\n        this.user = user;\r\n        console.log(\"Logout Route initialised with \" + this.user.mail)\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"activated: Logout \" + this.user.mail )\r\n        if (this.user !== null) {\r\n            console.log(\"Before Reset: \" + this.user.mail);\r\n            this.user.reset()\r\n            console.log(\"After Reset: \"+ this.user.mail);\r\n        }\r\n    }\r\n}\r\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-validation')\n    .feature('validation')\n    .feature('resources')\n  //  .feature('broadcasts')\n    .feature('administration');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Management {}\r\n","export class NotFound {}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router, EventAggregator, UserGateway, User)\r\nexport class Signup {\r\n    constructor(router, eventAggregator, userGateway, user) {\r\n        this.router = router;\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = new User();\r\n        this.newUser.mail = \"a@a.a\";\r\n        this.newUser.nickname = \"aa\";\r\n        this.newUser.password = \"a\";\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Signup activated\");\r\n        var self = this;\r\n        this.subscription = this.ea.subscribe('user-detected', function (e) {\r\n            console.log(\"Event raised\");\r\n            console.log(e);\r\n\r\n            var existingUser = e.existingUser;\r\n            // display hints if registration fails\r\n            self.addressExists = existingUser.mail != \"\";\r\n            self.nameExists = existingUser.nickname != \"\";\r\n\r\n            if (!self.addressExists && !self.nameExists) {\r\n                console.log(\"Add user\");\r\n                self.userGateway.add(self.newUser);\r\n            }\r\n        });\r\n\r\n        this.subscription2 = this.ea.subscribe('user-added', e => {\r\n            console.log(\"Event 2 raised\");\r\n            console.log(e);\r\n            //this.user = e.existingUser;          \r\n            self.router.navigateToRoute('login');\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n        this.subscription2.dispose();\r\n    }\r\n\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    save() {\r\n        console.log(\"W\");\r\n        alert('SAVE');\r\n        //    return this.userGateway.create(this.newUser)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n        return this.newUser;\r\n    }\r\n\r\n\r\n    performSignup() {\r\n        var msg = \"Signup  \" + this.newUser.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.nickname.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        //  var txt = this.userGateway.testLocalHerokuDB();\r\n        this.userGateway.getByMailAddress(this.newUser.mail);\r\n\r\n    }\r\n}\r\n","export class Tweet {}\r\n","export class WelcomeScreen {}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './services/user-gateway';\r\nimport { User } from './models/user';\r\n\r\n@inject(UserGateway, User)\r\nexport class X {\r\n    constructor(userGateway, user) {\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = new User();  \r\n        this.newUser.mail = \"\";\r\n        this.newUser.nickname = \"\";\r\n        this.newUser.password = \"\";\r\n    }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    performSignup() {\r\n        var msg = \"Signup  \" + newUser.user.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.nickname.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mail);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.nickname != null && existingUser.nickname.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            this.userGateway.add(this.newUser);\r\n        }\r\n    }\r\n}\r\n","// feature with child router : \r\nimport { Router } from 'aurelia-router';\r\n\r\nexport function configure(config) {\r\n    const router = config.container.get(Router);\r\n    router.addRoute({\r\n        route: 'administration', name: 'administration', moduleId: 'administration/main', nav: true, title: 'Administration'\r\n    });\r\n}","// child router inside feature : \r\nimport { inlineView } from 'aurelia-framework';\r\n\r\n@inlineView('<template><router-view></router-view></template>')\r\nexport class Administration {\r\n    configureRouter(config) {\r\n        config.map([\r\n            { route: '', name: 'administration', moduleId: './components/admin-menu', title: '' },\r\n            { route: 'populate', name: 'populate', moduleId: './components/populate', title: 'Add User' },\r\n            { route: 'cleanup', name: 'cleanup', moduleId: './components/cleanup', title: \"Cleanup\" },\r\n            { route: 'statistics', name: 'statistics', moduleId: './components/statistics', title: \"Statistics\" },\r\n        ]);\r\n    }\r\n}","export class BroadcastFilter {\r\n    static fromObject(src) {\r\n        const filter = Object.assign(new BroadcastFilter(), src);\r\n        return filter;\r\n    }\r\n\r\n    isBusy = false;\r\n  \r\n    constructor() {\r\n        this.persons = new Array();   \r\n        this.showNoMessages = false;\r\n        this.showMyMessages = true;\r\n        this.showTweetsOfSpecialUser = false;\r\n        this.nameOfSpecialUser = \"\";\r\n        this.showTweetsOfActiveVips = false;\r\n\r\n        console.log(\"Filter created : \" );\r\n    }\r\n\r\n\r\n    activate() {\r\n        console.log(\"Filter activated\");\r\n\r\n        var self = this;\r\n\r\n        this.subscription2 = this.ea.subscribe('user-detected', function (e) {\r\n            console.log(\"Event handler for messages-detected\");\r\n            console.log(e);\r\n            var existingUser = e.existingUser;\r\n            if (existingUser.mail != \"\") {\r\n                console.log(\"Request messages for \" + existingUser.nickname);\r\n                self.persons.push(existingUser.id);\r\n                self.broadcastGateway.getsomeMessages(persons, self.firstday, self.lastDay);\r\n            } else {\r\n                console.log(\"User does not exist\");\r\n            }\r\n\r\n            self.isBusy = false;\r\n        });\r\n\r\n        this.subscription3 = this.ea.subscribe('messages-removed', function (e) {\r\n            console.log(\"Event handler for messages-deletion\");\r\n            self.isBusy = false;\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n        this.subscription3.dispose();\r\n    }\r\n\r\n\r\n}","import { ValidationRules } from 'aurelia-validation';\r\n\r\nexport class Message {\r\n    static fromObject(src) {\r\n        const msg = Object.assign(new Message(), src);\r\n        return msg;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    text = 'My very first tweet';\r\n    image = null;\r\n    day = '';\r\n    time = '';\r\n    userId = '';\r\n\r\n    reset() {\r\n        text = '';\r\n        image = null;\r\n        day = '';\r\n        time = '';\r\n        userId = '';\r\n    }\r\n}","export class Toolkit{\r\n\r\n    createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    getDay () {\r\n        var now = new Date();\r\n        var month = (\"0\" + (now.getMonth() + 1)).slice(-2);\r\n        var day = (\"0\" + now.getDate()).slice(-2)\r\n        return now.getFullYear() + \"-\" + month + \"-\" + day;\r\n    }\r\n\r\n    getTime () {\r\n        var now = new Date();\r\n        return now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds();\r\n    }\r\n\r\n    isEven(number) {\r\n        return (number % 2) == 0;\r\n    }\r\n\r\n    resetSelectionRange () {\r\n        selectionRange = [-1, -1];\r\n    }\r\n\r\n}","import { Toolkit } from './toolkit';\r\n\r\nexport class User {\r\n    static fromObject(src) {\r\n        const user = Object.assign(new User(), src);\r\n        return user;\r\n    }\r\n\r\n    mail = ''; //a@b.c';\r\n    nickname = ''; //otto';\r\n    password = ''; //1';\r\n    id = \"0\";\r\n    \r\n    isAuthenticated = false;\r\n    isAdmin = true;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    vips = []; // Very Important Persons (alwasy visible)\r\n    nips = []; // Normal Important Persons (visible on demand)\r\n\r\n    constructor() {\r\n        var tool = new Toolkit();\r\n        this.id = tool.createGuid();\r\n        console.log(\"User created : \" + this.toString());\r\n    }\r\n\r\n    toString() {\r\n        var msg = \"Current user (ID = \" + this.id + \") : \" + this.mail + \" \" + this.nickname + \" \" + this.password;\r\n        return msg;\r\n    }\r\n\r\n    becomeFollower(id, isVeryImportantPerson) {\r\n        if (isVeryImportantPerson) {\r\n            this.vips.push(id);\r\n        } else {\r\n            this.nips.push(id);\r\n        }\r\n    }\r\n\r\nreset() {\r\n    this.mail = '';\r\n    this.nickname = '';\r\n    this.password = '';\r\n    this.id = '0';\r\n\r\n    this.isAuthenticated = false;\r\n    this.isAdmin = false;\r\n\r\n    // Lists of tweeters whom this user wants to follow\r\n    this.vips = []; // Very Important Persons (alwasy visible)\r\n    this.nips = []; // Normal Important Persons (visible on demand)\r\n}\r\n}","export function configure(config) {\n  config.globalResources([\n    // './attributes/blob-src',\n    // './attributes/file-drop-target',\n     './attributes/submit-task',\n\n    // './elements/file-picker',\n    './elements/group-list.html',\n    './elements/list-editor',\n    './elements/account-detail.html',\n    './elements/login-data.html',\n    './elements/submit-button.html',\n\n    './value-converters/filter-by',\n    './value-converters/group-by',\n    './value-converters/order-by',\n  ]);\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { UserGateway } from './user-gateway';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { User } from './../models/user';\r\nimport environment from './../environment';\r\n\r\n@inject(EventAggregator,HttpClient, UserGateway, User)\r\nexport class BroadcastGateway {\r\n\r\n    broadcasts = [];\r\n\r\n    constructor(eventAggregator, httpClient, userGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.user = user;\r\n        this.httpClient = httpClient.configure(config => {\r\n            config\r\n                //  .useStandardConfiguration()\r\n                .withBaseUrl(environment.usersUrl);\r\n        });\r\n        this.userGateway = userGateway;\r\n    }\r\n\r\n    addVIP(userID, vipName) {\r\n        var ToFollow = this.userGateway.getByName(vipName);\r\n        // TODO : retrieve user data from storage\r\n        // name must exist !\r\n        //  compare case insensitive  ;  name is NOT stored as lower case string\r\n        var x;\r\n        this.httpClient.get('/FollowerAdd/' + userID + '/' + ToFollow.id).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeVIP(userID, vipName) {\r\n        // TODO : retrieve user data from storage\r\n        // remove vip from  must exist !\r\n        //  compare case insensitive  ;  name is NOT stored as lower case string\r\n        var ToUnFollow = this.userGateway.getByName(vipName);\r\n        var x;\r\n        this.httpClient.get('/FollowerRemove/' + userID + '/' + ToUnFollow.id).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    updateVIPStatus(userID, vipName, isActiveVIP) {\r\n        var PriorityChanger = this.userGateway.getByName(vipName);\r\n        // TODO : retrieve user data from storage\r\n        // update entry in followers table !\r\n        //  compare vip name case insensitive  ;  name is NOT stored as lower case string\r\n        var x;\r\n        this.httpClient.get('/FollowerActivate/' + userID + '/' + PriorityChanger.id + '/' + isActiveVIP).then(res => {\r\n            x = res.content;\r\n            console.log(x);\r\n            return x;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //____________________________________________________\r\n    // Messages\r\n\r\n    addMessage(text, image) {\r\n\r\n        this.httpClient.post('/TweetAdd/' + this.user.id + '/' + text + '/' + image)\r\n            .then(res => {\r\n                try {\r\n                    var success = Boolean(res.content);\r\n                    console.log(\"content:\" + res.content + \" - success:\" + success);\r\n                    console.log(\"Raise Event message-sent \");\r\n                    if (success) {\r\n                        this.ea.publish('message-sent', { success });\r\n                    }\r\n           \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    getMessages(persons) {\r\n        // TODO  \r\n        var currentUser = persons[0]; // ids\r\n        this.httpClient.get('/TweetGet/' + currentUser)\r\n            .then(res => {\r\n                try {\r\n                    var messages=[];\r\n                    if (!(res.content == \"\" || res.content == \"[]\"))\r\n                    {  messages = JSON.parse(res.content); }\r\n                    console.log(\"content:\" + res.content);\r\n                    this.ea.publish('messages-downloaded', { messages });\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    getSomeMessages(persons, firstDay, lastDay) {\r\n        // Input: array, date, date\r\n    }\r\n\r\n    removeMessages(useriD) {\r\n        // TODO \r\n        this.httpClient.post('/TweetsRemove/' + userID)\r\n            .then(res => {\r\n                try {\r\n                    var success = Boolean(res.content);\r\n                    console.log(\"content:\" + res.content + \" - success:\" + success);\r\n                    console.log(\"Raise Event message-removed \");\r\n                    if (success) {\r\n                        this.ea.publish('message-removed', { sucess });\r\n                    }\r\n           \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { User } from './../models/user';\r\nimport environment from './../environment';\r\n\r\n@inject(HttpClient, EventAggregator)\r\nexport class UserGateway {\r\n\r\n    users = [];\r\n    admins = [];\r\n    followers = [];\r\n\r\n    constructor(httpClient, eventAggregator) {\r\n\r\n        this.httpClient = httpClient.configure(config => {\r\n            config\r\n                //  .useStandardConfiguration()\r\n                .withBaseUrl(environment.usersUrl);\r\n        });\r\n        this.ea = eventAggregator;\r\n    }\r\n\r\n    add(user) {\r\n        // add user data to storage\r\n        console.log('/Signup/' + user.id + '/' + user.mail.toLowerCase() + '/' + user.nickname + '/' + user.password);\r\n        this.httpClient.post('/Signup/' + user.id + '/' + user.mail.toLowerCase() + '/' + user.nickname + '/' + user.password)\r\n            .then(res => {\r\n                try {\r\n                    var success = Boolean(res.content);\r\n                    console.log(\"content:\" + res.content + \" - success:\" + success);\r\n                    if (success)\r\n                        console.log(\"Raise Event user-added \" + user);\r\n                    this.ea.publish('user-added', { user });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n    }\r\n\r\n    remove(user) {\r\n        // remove user and related data from storage\r\n        var success = true;\r\n        this.httpClient.post('/AccountRemove/' + user.id + '/' + user.mail.toLowerCase() + '/' + user.nickname + '/' + user.password)\r\n            .then(res => {\r\n                success = Boolean(res.content);\r\n                this.ea.publish('user-deleted', { success });\r\n            });\r\n    }\r\n\r\n\r\n    // update accout data : mail, name, password    \r\n    update(currentUser, modifiedUser) {\r\n\r\n        this.httpClient.post('/AccountEdit/' + currentUser.id + '/' + modifiedUser.mail.toLowerCase() + '/' + modifiedUser.nickname + '/' + modifiedUser.password)\r\n            .then(() => {\r\n                this.ea.publish('user-updated', { modifiedUser });\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    CheckNameAndMail(mail, username) {\r\n        this.httpClient.get('/MailNameCheck/' + mail + '/' + username)\r\n            .then(res => {\r\n                var content = JSON.parse(res.content);\r\n                this.ea.publish('user-mailNameCheck', { content });\r\n            });\r\n\r\n    }\r\n\r\n    // TODO validate login data : mail and password    \r\n    verify(user) {\r\n        var existingUser = new User();\r\n        console.log('/Login/' + user.mail.toLowerCase() + '/' + user.password);\r\n        this.httpClient.post('/Login/' + user.mail.toLowerCase() + '/' + user.password)\r\n            .then(res => {\r\n                try {\r\n                    var cont = res.content;\r\n                    console.log(\"content:\" + cont);\r\n\r\n                    console.log(\"Raise Event verify \" + cont);\r\n                    this.transferContentToUser(cont, existingUser);\r\n                    this.ea.publish('login-check', { existingUser });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    getByMailAddress(mailAddress) {\r\n        var existingUser = new User();\r\n        // TODO : retrieve user data from storage\r\n        //  compare case insensitive  ;  mail address is stored as lower case string\r\n        this.httpClient.get('/UserGetByMail/' + mailAddress.toLowerCase())\r\n            .then(res => {\r\n                try {\r\n                    this.transferContentToUser(res.content, existingUser);\r\n                    console.log(\"Raise Event user-detected \" + existingUser);\r\n                    this.ea.publish('user-detected', { existingUser });\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        // return existingUser;\r\n    }\r\n\r\n    getByName(username) {\r\n        var existingUser = new User();\r\n\r\n        // TODO : retrieve user data from storage     \r\n        this.httpClient.get('/UserGetByName/' + username).then(res => {\r\n            try {\r\n                this.transferContentToUser(res.content, existingUser);\r\n                this.ea.publish('user-detected', { existingUser });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n        return existingUser;\r\n    }\r\n\r\n    // TODO: delete, demo-code only\r\n    getAll() {\r\n        return this.httpClient.fetch('users')\r\n            .then(response => response.json())\r\n            .then(dto => dto.map(User.fromObject));\r\n    }\r\n\r\n    getById(id) {\r\n        var existingUser = User;\r\n\r\n        // TODO : retrieve user data from storage     \r\n        this.httpClient.get('/UserGetByUid/' + id).then(res => {\r\n            try {\r\n                transferContentToUser(res.content, existingUser);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n        return existingUser;\r\n    }\r\n\r\n\r\n    transferContentToUser(content, existingUser) {\r\n        console.log(\"transferContentToUser : \" + content);\r\n        if (content == \"\" || content === \"[]\") {\r\n            return;\r\n        }\r\n        var dbusers = JSON.parse(content);\r\n        if (dbusers.length == 0) {\r\n            return;\r\n        }\r\n        existingUser.id = dbusers[0].uid;\r\n        existingUser.mail = dbusers[0].mail;\r\n        existingUser.password = dbusers[0].password;\r\n        existingUser.nickname = dbusers[0].name;\r\n    }\r\n\r\n    isAdmin(userID) {\r\n        this.httpClient.get('/AdminCheck/' + userID).then(res => {\r\n            try {\r\n                this.ea.publish('admin-check', { res });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getVIPs(userID) {\r\n        this.httpClient.get('/FollowerGetAR/' + userID).then(res => {\r\n            var x = JSON.parse(res.content);\r\n            try {\r\n                this.ea.publish('vips-incoming', { x });\r\n                console.log(res);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    testServerConnection() {\r\n        var x = new Object();\r\n        this.httpClient.get('/test').then(res => {\r\n            x = res.content\r\n            //    res.send(res.content);\r\n            // await x.value = res.content;\r\n            // return await x;\r\n        });\r\n        return x; // expected result = Welcome ....\r\n    }\r\n\r\n    testLocalHerokuDB() {\r\n        var x;\r\n        this.httpClient.get('/db').then(res => {\r\n            x = res.content;\r\n        });\r\n        return x;  // expected result = tbl:2\r\n    }\r\n\r\n    setupDB() {\r\n        this.httpClient.post('/setupdb').then(res => {\r\n            x = res.content;\r\n        });\r\n    }\r\n}","import {ValidationRenderer, RenderInstruction, ValidationError} from 'aurelia-validation';\n\nexport class BootstrapFormValidationRenderer {\n\n  render(instruction) {\n    for (let { error, elements } of instruction.unrender) {\n      for (let element of elements) {\n        this.remove(element, error);\n      }\n    }\n\n    for (let { error, elements } of instruction.render) {\n      for (let element of elements) {\n        this.add(element, error);\n      }\n    }\n  }\n\n  add(element, error) {\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n    \n    formGroup.classList.add('has-error');\n\n    const message = document.createElement('span');\n    message.className = 'help-block validation-message';\n    message.textContent = error.message;\n    message.id = `bs-validation-message-${error.id}`;\n    element.parentNode.insertBefore(message, element.nextSibling);\n  }\n\n  remove(element, error) {\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    const message = formGroup.querySelector(`#bs-validation-message-${error.id}`);\n    if (message) {\n      element.parentNode.removeChild(message);\n      \n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {    \n        formGroup.classList.remove('has-error');\n      }\n    }\n  }\n}\n","import './rules';\nimport {BootstrapFormValidationRenderer} from './bootstrap-form-validation-renderer';\n\nexport function configure(config) {\n  config.plugin('aurelia-validation');\n  \n  config.container.registerHandler('bootstrap-form', container => container.get(BootstrapFormValidationRenderer));\n}\n","import {ValidationRules} from 'aurelia-validation';\n\nValidationRules.customRule(\n  'date', \n  (value, obj) => value === null || value === undefined || value === '' || !isNaN(Date.parse(value)), \n  '${$displayName} must be a valid date.'\n);\n\nValidationRules.customRule(\n  'notEmpty',\n  (value, obj) => value && value.length && value.length > 0,\n  '${$displayName} must contain at least one item.'\n);\n\nValidationRules.customRule(\n  'maxFileSize',\n  (value, obj, maxSize) => !(value instanceof FileList)\n    || value.length === 0\n    || Array.from(value).every(file => file.size <= maxSize),\n  '${$displayName} must be smaller than ${$config.maxSize} bytes.',\n  maxSize => ({ maxSize })\n);\n\nfunction hasOneOfExtensions(file, extensions) {\n  const fileName = file.name.toLowerCase();\n  return extensions.some(ext => fileName.endsWith(ext));\n}\n\nfunction allHaveOneOfExtensions(files, extensions) {\n  extensions = extensions.map(ext => ext.toLowerCase());\n  return Array.from(files).every(file => hasOneOfExtensions(file, extensions));\n}\n\nValidationRules.customRule(\n  'fileExtension',\n  (value, obj, extensions) => !(value instanceof FileList)\n    || value.length === 0\n    || allHaveOneOfExtensions(value, extensions),\n  '${$displayName} must have one of the following extensions: ${$config.extensions.join(\\', \\')}.',\n  extensions => ({ extensions })\n);\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(EventAggregator, UserGateway, User)\r\nexport class AdminMenu {\r\n\r\n    task = \"\";\r\n    validationFailed = false;\r\n\r\n    constructor(eventAggregator, userGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.obsoleteUser = new User();\r\n        this.obsoleteUser.mail = \"user@to.delete\";\r\n        this.obsoleteUser.nickname = \"\";\r\n        this.newUser = new User();\r\n        this.newUser.mail = \"\";\r\n        this.newUser.nickname = \"\";\r\n        this.newUser.password = \"\";\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Adm menu activated\");\r\n        // this.obsoleteUser.mail = \"user@to.delete\"\r\n        // this.obsoleteUser.nickname = \"\";\r\n        var self = this;\r\n\r\n        this.subscription1 = this.ea.subscribe('user-detected', function (e) {\r\n            var existingUser = e.existingUser;\r\n            if (existingUser.mail != \"\") {\r\n                console.log(\"User exists\");\r\n                if (self.task = \"AddUser\") {\r\n                    self.userGateway.add(self.newUser);\r\n                }\r\n                if (self.task = \"DeleteUser\") {\r\n                    self.userGateway.remove(existingUser);\r\n                }\r\n            } else {\r\n                console.log(\"User does not exist\");\r\n            }\r\n        });\r\n\r\n        this.subscription2 = this.ea.subscribe('user-deleted', function (e) {\r\n            var success = e;\r\n            if (success) {\r\n                console.log(\"User deleted\");\r\n            } else {\r\n                console.log(\"Deeleting user failed\");\r\n            }\r\n        });\r\n\r\n        this.subscription3 = this.ea.subscribe('user-added', function (e) {\r\n            var success = e;\r\n            if (success) {\r\n                console.log(\"User added\");\r\n            } else {\r\n                console.log(\"Adding user failed\");\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n        this.subscription3.dispose();\r\n    }\r\n\r\n    tryAddUser() {\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.nickname.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n        this.task = \"AddUser\"\r\n\r\n    }\r\n\r\n\r\n    tryDeleteUser() {\r\n        this.task = \"DeleteUser\"\r\n        if (confirm('Do you want to delete this user and all of his broadcasts?')) {\r\n            // TODO delete selected items\r\n            if (this.obsoleteUser.mail.length > 0) {\r\n                this.userGateway.getByMailAddress(this.newUser.mail);\r\n                return;\r\n            }\r\n\r\n            if (this.obsoleteUser.nickname.length > 0) {\r\n                this.userGateway.getByName(this.newUser.mail);\r\n                return;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","export class CleanupContent {\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Cleanup{\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n        this.temporaryUser = new User();\r\n        this.temporaryUser.nickname = \"X\"; \r\n        this.temporaryUser.mail = 'a@b.c';\r\n        this.temporaryUser.password = '1';\r\n    }\r\n\r\n    validationFailed = false;\r\n    displayMessages = false;  \r\n\r\n    activateUser() {\r\n        console.log(\"Activate user \" + this.temporaryUser.nickname + \" with messages : \" +this.displayMessages );\r\n    }\r\n\r\n    processTask() {\r\n       console.log(\"Process deletion task for user : \" + this.temporaryUser.nickname);\r\n    }\r\n\r\n    testSubmitButton3() {\r\n        console.log(\"Test Submit Buton 3 : \");//+ this.temporaryUser.nickname);\r\n    }\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(EventAggregator, UserGateway, User)\r\nexport class AddUser {\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    constructor(eventAggregator, userGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.newUser = new User();\r\n        this.newUser.mail = \"\";\r\n        this.newUser.nickname = \"\";\r\n        this.newUser.password = \"\";\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Adm menu activated\");\r\n        // this.obsoleteUser.mail = \"user@to.delete\"\r\n        // this.obsoleteUser.nickname = \"\";\r\n        var self = this;\r\n\r\n        this.subscription1 = this.ea.subscribe('user-detected', function (e) {\r\n            var existingUser = e.existingUser;\r\n            // display hints if registration fails\r\n            self.addressExists = existingUser.mail != \"\";\r\n            self.nameExists = existingUser.nickname != \"\";\r\n\r\n            if (!self.addressExists && !self.nameExists) {\r\n                console.log(\"User doesn't exist, add him\");\r\n                    self.userGateway.add(self.newUser);\r\n            } else {\r\n                console.log(\"User already exists\");\r\n            }\r\n        });\r\n\r\n        this.subscription2 = this.ea.subscribe('user-added', function (e) {\r\n            var success = e;\r\n            if (success) {\r\n                console.log(\"User added\");\r\n            } else {\r\n                console.log(\"Adding user failed\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n    }\r\n    \r\n    tryAddUser() {\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n            this.newUser.nickname.length == 0 ||\r\n            this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n        this.userGateway.getByMailAddress(this.newUser.mail);\r\n    }\r\n\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Statistics {\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n    }\r\n\r\n    validationFailed = false;\r\n\r\n}","import { bindable } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n\r\nexport class ListEditorCustomElement {\r\n\r\n    @bindable items = [];\r\n    @bindable addItem;\r\n}\r\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { BroadcastGateway } from './../../services/broadcast-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(EventAggregator, BroadcastGateway, User)\r\nexport class History {\r\n    constructor(eventAggregator, broadcastGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.user = user;\r\n        this.broadcastGateway = broadcastGateway;\r\n    }\r\n\r\n    vipName = \"\";\r\n    isVeryImportant = false; // vipStatus\r\n\r\n    addVIP(name, status) {\r\n        var vip = new User();\r\n        // TODO : Add or overwrite entry in table 'Followers'\r\n        //    return this.broadcastGateway.addVip(this.vipName,this.isVeryImportant)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }\r\n\r\n\r\n\r\n    removeVIP(name, status) {\r\n        var vip = new User();\r\n        //    return this.broadcastGateway.removeVip(this.vipName,this.isVeryImportant)\r\n        //        .then(() => this.router.navigateToRoute('login'));\r\n\r\n    }\r\n\r\n}","import {inject, DOM} from 'aurelia-framework';\n\n@inject(DOM.Element)\nexport class SubmitTaskCustomAttribute {\n\n  constructor(element) {\n    this.element = element;\n    this.onSubmit = this.trySubmit.bind(this);\n  }\n\n  attached() {\n    this.element.addEventListener('submit', this.onSubmit);\n    this.element.isSubmitTaskExecuting = false;\n  }\n\n  trySubmit(e) {\n    e.preventDefault();\n    if (this.task) {\n      return;\n    }\n\n    this.element.isSubmitTaskExecuting = true;\n    this.task = Promise.resolve(this.value()).then(\n      () => this.completeTask(),\n      () => this.completeTask());\n  }\n\n  completeTask() {\n    this.task = null;\n    this.element.isSubmitTaskExecuting = false;\n  }\n\n  detached() {\n    this.element.removeEventListener('submit', this.onSubmit);\n  }\n}\n","export class AccountDetail {\r\n\r\n    activate(temporaryUser) {\r\n        this.user = temporaryUser;\r\n    }\r\n}","import {bindable} from 'aurelia-framework';\n\nexport class ListEditorCustomElement {\n  \n  @bindable items = [];\n  @bindable addItem;\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { UserGateway } from './../../services/user-gateway';\r\nimport { User } from './../../models/user';\r\n\r\n@inject(UserGateway)\r\nexport class UserCreation {\r\n    constructor(userGateway) {\r\n        this.userGateway = userGateway;\r\n        this.newUser = new User();  \r\n   }\r\n\r\n    isBusy = false;\r\n    validationFailed = false;\r\n    addressExists = false;\r\n    nameExists = false;\r\n    isValidPassword = true; // ER: validate PW-Security\r\n\r\n    addUser() {\r\n        var msg = \"Add user  \" + newUser.user.toString();\r\n        console.log(msg);\r\n\r\n        // aurelia-validation is much more complex\r\n        this.validationFailed =\r\n            this.newUser.mail.length == 0 ||\r\n        this.newUser.nickname.length == 0 ||\r\n        this.newUser.password.length == 0;\r\n        if (this.validationFailed) {\r\n            console.log(\"Input-Validation failed\");\r\n            //  alert(msg);\r\n            return;\r\n        }\r\n\r\n        // try retrieving user data from storage\r\n        var existingUser = this.userGateway.getByMailAddress(this.newUser.mail);\r\n\r\n        // display hints if registration fails\r\n        this.addressExists = existingUser.mail != null && existingUser.mail.length > 0;\r\n        this.nameExists = existingUser.nickname != null && existingUser.nickname.length > 0;\r\n\r\n        // register as new user\r\n        if (!addressExists && !nameExists) {\r\n            return this.userGateway.add(this.newUser);\r\n        }\r\n    }\r\n}\r\n","export class FilterByValueConverter {\n  toView(array, value, ...properties) {\n    value = (value || '').trim().toLowerCase();\n    \n    if (!value) {\n      return array;\n    }\n    return array.filter(item => \n      properties.some(property => \n        (item[property] || '').toLowerCase().includes(value)));\n  }\n}\n","export class GroupByValueConverter {\n  toView(array, property) {\n    const groups = new Map();\n    for (let item of array) {\n      let key = item[property];\n      let group = groups.get(key);\n      if (!group) {\n        group = { key, items: [] };\n        groups.set(key, group);\n      }\n      group.items.push(item);\n    }\n    return Array.from(groups.values());\n  }\n}\n","export class OrderByValueConverter {\n  toView(array, property, direction = 'asc') {\n    array = array.slice(0);\n    const directionFactor = direction === 'desc' ? -1 : 1;\n    array.sort((item1, item2) => {\n      const value1 = item1[property];\n      const value2 = item2[property];\n      if (value1 > value2) {\n        return directionFactor;\n      } else if (value1 < value2) {\n        return -directionFactor;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n}\n","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { ValidationController } from 'aurelia-validation';\r\nimport { UserGateway } from './../../../services/user-gateway';\r\nimport { User } from './../../../models/user';\r\n\r\n@inject(UserGateway, NewInstance.of(ValidationController))\r\nexport class Statistics {\r\n    constructor(userGateway, validationController) {\r\n        this.userGateway = userGateway;\r\n        this.validationController = validationController;\r\n        this.user = new User();\r\n    }\r\n\r\n    validationFailed = false;\r\n    displayMessages = false;\r\n\r\n    retrieveSummary() {\r\n        console.log(\"Retrieve summary : \")\r\n    }\r\n\r\n    emptyGrid() {\r\n        console.log(\"Empty summary results : \")\r\n    }\r\n    \r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { computedFrom } from 'aurelia-framework';\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\nimport { User } from './../../../models/user';\r\nimport { Message } from './../../../models/message';\r\nimport { Toolkit } from './../../../models/toolkit';\r\n\r\n@inject(EventAggregator, BroadcastGateway, User, NewInstance.of(Message))\r\nexport class Broadcast {\r\n\r\n    isBusy = false;\r\n    isImageAttached = false;\r\n    imageUrl = null;\r\n    selectedFiles = null;\r\n    selectedImage = null;\r\n\r\n    constructor(eventAggregator,broadcastGateway, user, message) {\r\n        this.ea = eventAggregator;\r\n        this.broadcastGateway = broadcastGateway;\r\n        this.user = user;\r\n        this.message = message;\r\n        this.toolkit = new Toolkit();\r\n    }\r\n\r\n    activate() {\r\n        var self = this;\r\n\r\n        this.subscription = this.ea.subscribe('message-sent', function (e) {\r\n            console.log(\"Event handler for message-sent\");\r\n            self.isBusy = false;\r\n            //this.message.reset();\r\n            //  this.router.navigateToRoute('login'));\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription.dispose();\r\n    }\r\n    \r\n\r\n    @computedFrom('isImageAttached')\r\n    get computedImageUrl() {\r\n        console.log(\"Return image URL :\" + this.imageUrl);\r\n        return this.imageUrl;\r\n    }\r\n\r\n    detachImage() {\r\n        this.imageUrl = null;\r\n        this.isImageAttached = false;\r\n    }\r\n\r\n    updateImageUrl() {\r\n        console.log(\"Update Image URL\");\r\n        if (this.selectedFiles.length > 0) {\r\n            this.isImageAttached = false;\r\n            this.selectedImage = this.selectedFiles[0];\r\n            this.readFileURL(this.selectedImage, this);\r\n            this.isImageAttached = this.imageUrl != null;\r\n        } else {\r\n            detachImage();\r\n        }\r\n    }\r\n\r\n    updatePreview() {\r\n        console.log(\"Update Preview\");\r\n        this.updateImageUrl();\r\n        console.log(\"Updated Image URL :\" + this.imageUrl);\r\n    }\r\n\r\n    readFileURL(selectedFile, broadcast) {\r\n        // load data asynchronously\r\n        var reader = new FileReader();\r\n        reader.onload = (function (selectedImage) {\r\n            return function (e) {\r\n                console.log(\"Selected image :\" + e.target.result);\r\n                broadcast.imageUrl = e.target.result;\r\n            };\r\n        })(selectedFile);\r\n        reader.readAsDataURL(selectedFile);\r\n\r\n    }\r\n\r\n    sendMessage() {\r\n        if (this.isBusy) {\r\n            return;\r\n        };\r\n\r\n     //   this.isBusy = true;\r\n        console.log(\"Send message\");\r\n        if (this.isValidMessage()) {\r\n            this.message.image = this.imageUrl;\r\n            this.message.userId = this.user.id;\r\n            this.message.day = this.toolkit.getDay();\r\n            this.message.time = this.toolkit.getTime();\r\n            // send message --> add message to table 'tweets'\r\n            this.broadcastGateway.addMessage(this.message.text, encodeURIComponent(this.imageUrl));\r\n        }\r\n    }\r\n\r\n    isValidMessage() {\r\n        if (this.isImageAttached) {\r\n            return true;\r\n        } else {\r\n            return this.message.text.length > 0;\r\n        }\r\n    }\r\n\r\n}","import { inject, NewInstance } from 'aurelia-framework';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\n//import { ViewManager } from 'aurelia-view-manager';\r\nimport { BroadcastGateway } from './../../../services/broadcast-gateway';\r\nimport { UserGateway } from './../../../services/user-gateway';\r\nimport { User } from './../../../models/user';\r\nimport { BroadcastFilter } from './../../../models/broadcast-filter';\r\n\r\n@inject(EventAggregator, BroadcastGateway, UserGateway, User)\r\nexport class History {\r\n\r\n    isBusy = false;\r\n    vipName = \"\";\r\n\r\n    receivedTweets = [];\r\n    timeRange = [\r\n        { firstDay: null },\r\n        { lastDay: null }\r\n    ];\r\n\r\n    constructor(eventAggregator, broadcastGateway, userGateway, user) {\r\n        this.ea = eventAggregator;\r\n        this.broadcastGateway = broadcastGateway;\r\n        this.userGateway = userGateway;\r\n        this.user = user;\r\n        this.senderFilter = new BroadcastFilter();\r\n\r\n        this.showNoMessages = false;\r\n        this.showMyMessages = true;\r\n        this.showTweetsOfSpecialUser = false;\r\n        this.nameOfSpecialUser = \"\";\r\n        this.showTweetsOfActiveVips = false;\r\n\r\n        this.useRerestrictedTimeRange = true;\r\n        this.firstDay = null;\r\n        this.lastDay = null;\r\n    }\r\n\r\n    isVeryImportant = false; // vipStatus\r\n    // showNoMessages = false;\r\n    // showMyMessages = true;\r\n    // showTweetsOfSpecialUser = false;\r\n    // nameOfSpecialUser = \"\";\r\n    // showTweetsOfActiveVips = false;    \r\n\r\n    activate() {\r\n        var self = this;\r\n        this.useRerestrictedTimeRange = true;\r\n\r\n        this.subscription1 = this.ea.subscribe('messages-downloaded', function (e) {\r\n            self.receivedTweets = [];\r\n            console.log(\"Event handler for messages-downloaded\");\r\n            console.log(e);\r\n            e.messages.forEach(function (element) {\r\n                self.receivedTweets.push(element);\r\n            }, this);\r\n\r\n            self.isBusy = false;\r\n        });\r\n\r\n        this.subscription2 = this.ea.subscribe('user-detected', function (e) {\r\n            console.log(\"Event handler for messages-detected\");\r\n            console.log(e);\r\n            var existingUser = e.existingUser;\r\n            if (existingUser.mail != \"\") {\r\n                console.log(\"Add \" + existingUser.nickname + \" to list\");\r\n                self.persons.push(existingUser.id);\r\n                console.log(\"Request messages for \" + persons);\r\n                self.broadcastGateway.getSomeMessages(persons, self.timeRange.firstDay, self.timeRange.lastDay);\r\n            } else {\r\n                console.log(\"User does not exist\");\r\n            }\r\n\r\n            self.isBusy = false;\r\n        });\r\n\r\n        this.subscription3 = this.ea.subscribe('messages-removed', function (e) {\r\n            console.log(\"Event handler for messages-deletion\");\r\n            self.isBusy = false;\r\n        });\r\n\r\n    }\r\n\r\n    deactivate() {\r\n        this.subscription1.dispose();\r\n        this.subscription2.dispose();\r\n        this.subscription3.dispose();\r\n    }\r\n\r\n    xshowTweetsOfActiveVipsChanged(e) {\r\n        this.showTweetsOfActiveVips = e.currentTarget.activeElement.checked;\r\n        console.log(this.showTweetsOfActiveVips);\r\n    }\r\n\r\n    timeRangeUsageChanged(e) {\r\n        this.useRerestrictedTimeRange = e.currentTarget.activeElement.checked;\r\n        console.log(this.showTweetsOfActiveVips);\r\n    }\r\n\r\n    cleanupTable() {\r\n        this.receivedTweets = [];\r\n    }\r\n\r\n    retrieveMessages() {\r\n        if (this.isBusy) {\r\n            // return;\r\n        };\r\n\r\n        // Create message filter from input \r\n        var persons = new Array();\r\n        this.cleanupTable();\r\n\r\n        this.timeRange.firstDay = new Date(2017, 1, 1, 0, 0, 0, 0);\r\n        this.timeRange.lastDay = now();\r\n        if (this.useRerestrictedTimeRange) {\r\n            if (this.firstDay != null) {\r\n                this.timeRange.firstDay = this.firstDay;\r\n            }\r\n            if (this.lastDay != null) {\r\n                this.timeRange.lastDay = this.lastDay;\r\n            }\r\n        }\r\n\r\n        if (this.showTweetsOfActiveVips) {\r\n            this.user.vips.forEach(function (element) {\r\n                persons.push(element);\r\n            }, this);\r\n        };\r\n\r\n        if (this.showMyMessages) {\r\n            persons.push(this.user.id);\r\n        };\r\n\r\n        if (this.showTweetsOfSpecialUser) {\r\n            this.userGateway.getByName(this.nameOfSpecialUser);\r\n            return;\r\n        };\r\n\r\n        this.isBusy = true;\r\n        console.log(\"Request messages\");\r\n        this.broadcastGateway.getSomeMessages(persons, this.timeRange.firstDay, this.timeRange.lastDay);\r\n    }\r\n\r\n\r\n\r\n    removeMessages() {\r\n        if (this.isBusy) {\r\n            return;\r\n        };\r\n\r\n        this.isBusy = true;\r\n        console.log(\"Request message-deletion\");\r\n        this.broadcastGateway.removeMessages(this.user.id);\r\n    }\r\n\r\n}","export class MessageFilter {\r\n    activate(msgFilter) {\r\n        this.msgFilter = history.senderFilter;\r\n    }\r\n}","function tweetTable(dataTable) {\r\n    // Private properties\r\n    var activeTable = dataTable;\r\n    var tableType = \"small\";\r\n    var selectionRange = [-1, -1];\r\n    var sorting = [];\r\n    sorting[0] = \"descending\";\r\n    sorting[1] = \"descending\";\r\n    sorting[2] = \"descending\";\r\n\r\n    // Private methods\r\n    function createTableHeader(columns) {\r\n        var header = document.createElement(\"thead\");\r\n        var row = document.createElement(\"tr\");\r\n        var col, content;\r\n\r\n        for (var i = 0; i < columns.length; i++) {\r\n            col = document.createElement(\"th\");\r\n            content = document.createTextNode(columns[i]);\r\n            col.appendChild(content);\r\n            row.appendChild(col);\r\n        }\r\n\r\n        header.appendChild(row);\r\n        return header;\r\n    }\r\n\r\n    function populateTable(tweetsToDisplay, indexOfFirstTweetProperty, amountOfColumns) {\r\n        // small table : indexOfFirstColumn = 1\r\n        var body = document.createElement(\"tbody\");\r\n        var row, col, content;\r\n        var tweetData;\r\n        var user = userRecord;\r\n\r\n        for (var rowIndex = 0; rowIndex < tweetsToDisplay.length; rowIndex++) {\r\n            row = document.createElement(\"tr\");\r\n            setRowColor(row, rowIndex);\r\n\r\n            tweetData = tweetsToDisplay[rowIndex];\r\n\r\n            for (var colIndex = indexOfFirstTweetProperty; colIndex < amountOfColumns; colIndex++) {\r\n                col = document.createElement(\"td\");\r\n                switch (colIndex) {\r\n                    case 0:\r\n                      //  user = storageReader.retrieveUserDataByID(tweetData.userID)\r\n                        // content = document.createTextNode(user.username);\r\n                        content = document.createTextNode(tweetData.userID);                       \r\n                        break;\r\n                    case 1:\r\n                        content = document.createTextNode(tweetData.day);\r\n                        break;\r\n                    case 2:\r\n                        content = document.createTextNode(tweetData.time);\r\n                        break;\r\n                    case 3:\r\n                        content = document.createTextNode(tweetData.message);\r\n                        break;\r\n                    case 4:\r\n                        // attachment\r\n                        content = document.createElement('IMG');\r\n                        if ((tweetData.attachment != null) && (tweetData.attachment != \"\")) {\r\n                            content.setAttribute(\"src\", tweetData.attachment);\r\n                            content.setAttribute(\"height\", \"auto\");\r\n                            content.setAttribute(\"width\", \"100px\");\r\n                            content.setAttribute(\"alt\", \"Attached Image\");\r\n                        }\r\n                        break;\r\n                }\r\n                col.appendChild(content);\r\n                row.appendChild(col);\r\n            }\r\n\r\n            body.appendChild(row);\r\n        }\r\n        return body;\r\n    }\r\n\r\n    function setRowColor(row, index) {\r\n        if (mwaToolset.isEven(index)) {\r\n            row.setAttribute(\"class\", \"even\");\r\n        } else {\r\n            row.removeAttribute(\"class\");\r\n        }\r\n    }\r\n\r\n    function selectFromTo(range, rows) {\r\n        var firstIndex = range[0] - 1;\r\n        var lastIndex = range[1] - 1;\r\n\r\n        if (firstIndex > lastIndex) {\r\n            firstIndex = range[1] - 1;\r\n            lastIndex = range[0] - 1;\r\n        }\r\n\r\n        for (i = 0; i < rows.length; i++) {\r\n            switch (true) {\r\n                case (i < firstIndex):\r\n                    rows[i].classList.toggle('selected', false);\r\n                    break;\r\n                case (i > lastIndex):\r\n                    rows[i].classList.toggle('selected', false);\r\n                    break;\r\n                default:\r\n                    rows[i].classList.toggle('selected', true);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function deselectAll() {\r\n        var region = activeTable.getElementsByTagName(\"TBODY\")[0];\r\n        var rows = region.getElementsByTagName(\"tr\");\r\n\r\n        for (i = 0; i < rows.length; i++) {\r\n            rows[i].classList.toggle('selected', false);\r\n        }\r\n    }\r\n\r\n    function deleteSelectedRows(userID) {\r\n        if (activeTable == null) {\r\n            alert(\"No items selected\");\r\n        } else {\r\n            var selectedRows = getSelectedRows(activeTable);\r\n            var selectedItems = getSelectedItems(selectedRows, userID);\r\n            if (storageWriter.deleteSelectedTweets(userID, selectedItems)) {\r\n                var tweets = storageReader.getSubsetOfTweetsByID(userID);\r\n                updateContent(tweets);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getSelectedRows(table) {\r\n        var region = table.getElementsByTagName(\"TBODY\")[0];\r\n        var selectedRows = region.getElementsByClassName('selected');\r\n        return selectedRows;\r\n    }\r\n\r\n    function getSelectedItems(selectedRows, userID) {\r\n        var selectedItems = [];\r\n        var dayIndex = 0;\r\n        if (tableType != 'small') {\r\n            dayIndex = 1;\r\n        }\r\n        var timeIndex = dayIndex + 1;\r\n        var day, time;\r\n\r\n        for (i = 0; i < selectedRows.length; i++) {\r\n            day = selectedRows[i].children[dayIndex].innerText;\r\n            time = selectedRows[i].children[timeIndex].innerText;\r\n            selectedItems.push(tweetCreator.createTweet(userID, day, time, \"\", \"\"));\r\n        }\r\n\r\n        return selectedItems;\r\n    }\r\n\r\n    function updateContent(subsetOfTweets) {\r\n        var header, body;\r\n        var columns = [];\r\n\r\n        try {\r\n            activeTable.innerHTML = \"\";\r\n\r\n            if (tableType == \"small\") {\r\n                columns = [\"Day\", \"Time\", \"Message\", \"Attachment\"];\r\n                header = createTableHeader(columns);\r\n                body = populateTable(subsetOfTweets, 1, columns.length + 1);\r\n            } else {\r\n                columns = [\"Author\", \"Day\", \"Time\", \"Message\", \"Attachment\"];\r\n                header = createTableHeader(columns);\r\n                body = populateTable(subsetOfTweets, 0, columns.length);\r\n            }\r\n\r\n            activeTable.appendChild(header);\r\n            activeTable.appendChild(body);\r\n\r\n            mwaToolset.resetSelectionRange();\r\n\r\n        } catch (e) {\r\n            var err = e.name + ' ' + e.message;\r\n            alert(err);\r\n            success = false;\r\n\r\n        } finally {\r\n\r\n        }\r\n    }\r\n\r\n    // Table data sorting \r\n    function sortTextData(columnIndex) {\r\n        var region = activeTable.getElementsByTagName(\"TBODY\")[0];\r\n        var rows = region.getElementsByTagName(\"tr\");\r\n        var item1;\r\n        var item2;\r\n        var swap = false;\r\n\r\n        for (var i = 0; i < rows.length - 1; i++) {\r\n            for (var j = 0; j < rows.length - (i + 1); j++) {\r\n\r\n                item1 = rows.item(j).getElementsByTagName('td').item(columnIndex).innerHTML;\r\n                item2 = rows.item(j + 1).getElementsByTagName('td').item(columnIndex).innerHTML;\r\n                // Swap rows if sort condition matches\r\n                if (sorting[columnIndex] == \"ascending\") {\r\n                    swap = item1 > item2;\r\n                } else {\r\n                    swap = item1 < item2;\r\n                }\r\n                if (swap) {\r\n                    region.insertBefore(rows.item(j + 1), rows.item(j));\r\n                }\r\n            }\r\n        }\r\n\r\n        // restore alternating row background\r\n        for (var i = 0; i < rows.length - 1; i++) {\r\n            setRowColor(rows[i], i);\r\n        }\r\n    }\r\n\r\n    function toggleSorting(columnIndex) {\r\n        if (sorting[columnIndex] == \"descending\") {\r\n            sorting[columnIndex] = \"ascending\";\r\n        } else {\r\n            sorting[columnIndex] = \"descending\";\r\n        }\r\n    }\r\n    // ___________________________________________________________\r\n    // Public methods\r\n\r\n    var tableObject = {\r\n\r\n        setTableType: function (typeOfTable) {\r\n            tableType = typeOfTable;\r\n        },\r\n\r\n        updateTable: function (subsetOfTweets) {\r\n            updateContent(subsetOfTweets);\r\n        },\r\n\r\n        findTweets: function (e) {\r\n            var activeTable = e.currentTarget;\r\n            var selectedColumn = e.target;\r\n            var currentRow = e.target.parentNode;\r\n            var nameOfRegion = e.target.parentNode.parentNode.nodeName;\r\n            var selectedRows = [];\r\n            var startIndex = selectionRange[0];\r\n\r\n            switch (nameOfRegion) {\r\n                case 'THEAD':\r\n                    // switch sort order\r\n                    var upperBound = 3;\r\n                    if (tableType = \"small\") { upperBound = 2 };\r\n\r\n                    if (selectedColumn.cellIndex <= upperBound) {\r\n                        toggleSorting(selectedColumn.cellIndex);\r\n                        sortTextData(selectedColumn.cellIndex)\r\n                    }\r\n                    break;\r\n\r\n                case 'TBODY':\r\n                    // highlight selected rows\r\n                    selectedRows = getSelectedRows(activeTable);\r\n\r\n                    if (selectionRange[0] < 0) {\r\n                        if (selectedRows.length > 0) {\r\n                            deselectAll();\r\n                        }\r\n                        currentRow.classList.toggle('selected');\r\n                        selectionRange[0] = currentRow.rowIndex; // startIndex\r\n                    } else {\r\n                        switch (true) {\r\n                            case (e.ctrlKey):\r\n                                // append row to selection list\r\n                                if (e.ctrlKey) {\r\n                                    currentRow.classList.toggle('selected');\r\n                                }\r\n                                break;\r\n\r\n                            case ((e.shiftKey) && (startIndex >= 0)):\r\n                                // create selection list as region\r\n                                if ((e.shiftKey) && (startIndex >= 0)) {\r\n                                    if (currentRow.rowIndex == startIndex) {\r\n                                        currentRow.classList.toggle('selected');\r\n                                    } else {\r\n                                        selectionRange[1] = currentRow.rowIndex;\r\n                                        var region = activeTable.getElementsByTagName(\"TBODY\")[0];\r\n                                        var allRows = region.getElementsByTagName(\"tr\");\r\n                                        selectFromTo(selectionRange, allRows);\r\n                                    }\r\n                                    mwaToolset.resetSelectionRange();\r\n                                }\r\n                                break;\r\n                            case (true):\r\n                                // refuse existing selection list, start a new one\r\n                                if (selectedRows.length > 0) {\r\n                                    deselectAll();\r\n                                    mwaToolset.resetSelectionRange();\r\n                                }\r\n                                currentRow.classList.toggle('selected');\r\n                                selectionRange[0] = currentRow.rowIndex; // startIndex\r\n                                break;\r\n                        }\r\n                    }\r\n            }\r\n        },\r\n\r\n        deleteAllTweets: function (userID) {\r\n            if (storageWriter.deleteUserTweets(userID)) {\r\n                var tweets = storageReader.getSubsetOfTweetsByID(userID);\r\n                updateContent(tweets);\r\n            }\r\n        },\r\n\r\n        deleteSelectedTweets: function (userID) {\r\n            //deleteSelectedRows(userID);\r\n\r\n            if (activeTable == null) {\r\n                alert(\"No items selected\");\r\n                return;\r\n            }\r\n            var selectedRows = getSelectedRows(activeTable);\r\n            if (selectedRows.length == 0) {\r\n                alert(\"No items selected\");\r\n                return;\r\n            }\r\n\r\n            var selectedItems = getSelectedItems(selectedRows, userID);\r\n            if (storageWriter.deleteSelectedTweets(userID, selectedItems)) {\r\n                var tweets = storageReader.getSubsetOfTweetsByID(userID);\r\n                updateContent(tweets);\r\n            }\r\n        }\r\n    };\r\n    return tableObject;\r\n\r\n}"],"sourceRoot":".."}